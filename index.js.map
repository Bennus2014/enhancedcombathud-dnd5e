{"version":3,"file":"./index.js","mappings":"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","sources":["webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///./scripts/config.js","webpack:///./scripts/settings.js","webpack:///./scripts/main.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","import { MODULE_ID } from \"./main.js\";\r\n\r\nconst ECHItems = {};\r\n\r\nexport function initConfig() {\r\n    Hooks.on(\"argonInit\", (CoreHUD) => {\r\n        if (game.system.id !== \"dnd5e\") return;\r\n        registerItems();\r\n        const ARGON = CoreHUD.ARGON;\r\n\r\n        const actionTypes = {\r\n            action: [\"action\", \"legendary\"],\r\n            bonus: [\"bonus\"],\r\n            reaction: [\"reaction\", \"reactiondamage\", \"reactionmanual\"],\r\n            free: [\"special\"],\r\n        };\r\n\r\n        const itemTypes = {\r\n            spell: [\"spell\"],\r\n            feat: [\"feat\"],\r\n            consumable: [\"consumable\", \"equipment\", \"loot\", \"weapon\"],\r\n        };\r\n\r\n        async function getTooltipDetails(item, type) {\r\n            let title, description, itemType, subtitle, target, range, dt;\r\n            let damageTypes = [];\r\n            let properties = [];\r\n            let materialComponents = \"\";\r\n\r\n            if (type == \"skill\") {\r\n                title = CONFIG.DND5E.skills[item];\r\n                description = this.hudData.skills[item].tooltip;\r\n            } else if (type == \"save\") {\r\n                title = CONFIG.DND5E.abilities[item];\r\n                description = this.hudData.saves[item].tooltip;\r\n            } else {\r\n                if (!item || !item.system) return;\r\n\r\n                title = item.name;\r\n                description = item.system.description.value;\r\n                itemType = item.type;\r\n                target = item.labels?.target || \"-\";\r\n                range = item.labels?.range || \"-\";\r\n                properties = [];\r\n                dt = item.labels?.damageTypes?.split(\", \");\r\n                damageTypes = dt && dt.length ? dt : [];\r\n                materialComponents = \"\";\r\n\r\n                switch (itemType) {\r\n                    case \"weapon\":\r\n                        subtitle = CONFIG.DND5E.weaponTypes[item.system.weaponType];\r\n                        properties.push(CONFIG.DND5E.itemActionTypes[item.system.actionType]);\r\n                        for (let [key, value] of Object.entries(item.system.properties)) {\r\n                            let prop = value && CONFIG.DND5E.weaponProperties[key] ? CONFIG.DND5E.weaponProperties[key] : undefined;\r\n                            if (prop) properties.push(prop);\r\n                        }\r\n                        break;\r\n                    case \"spell\":\r\n                        subtitle = `${item.labels.level} ${item.labels.school}`;\r\n                        properties.push(CONFIG.DND5E.spellSchools[item.system.school]);\r\n                        properties.push(item.labels.duration);\r\n                        properties.push(item.labels.save);\r\n                        for (let comp of item.labels.components.all) {\r\n                            properties.push(comp.abbr);\r\n                        }\r\n                        if (item.labels.materials) materialComponents = item.labels.materials;\r\n                        break;\r\n                    case \"consumable\":\r\n                        subtitle = CONFIG.DND5E.consumableTypes[item.system.consumableType];\r\n                        properties.push(CONFIG.DND5E.itemActionTypes[item.system.actionType]);\r\n                        break;\r\n                    case \"feat\":\r\n                        subtitle = item.system.requirements;\r\n                        properties.push(CONFIG.DND5E.itemActionTypes[item.system.actionType]);\r\n                        break;\r\n                }\r\n            }\r\n\r\n            if (description) description = await TextEditor.enrichHTML(description);\r\n            let details = [];\r\n            if (target || range) {\r\n                details = [\r\n                    {\r\n                        label: \"enhancedcombathud-dnd5e.tooltip.target.name\",\r\n                        value: target,\r\n                    },\r\n                    {\r\n                        label: \"enhancedcombathud-dnd5e.tooltip.range.name\",\r\n                        value: range,\r\n                    },\r\n                ];\r\n            }\r\n\r\n            const tooltipProperties = [];\r\n            if (damageTypes?.length) damageTypes.forEach((d) => tooltipProperties.push({ label: d, primary: true }));\r\n            if (properties?.length) properties.forEach((p) => tooltipProperties.push({ label: p, secondary: true }));\r\n\r\n            return { title, description, subtitle, details, properties: tooltipProperties, footerText: materialComponents };\r\n        }\r\n\r\n        class DND5ePortraitPanel extends ARGON.PORTRAIT.PortraitPanel {\r\n            constructor(...args) {\r\n                super(...args);\r\n            }\r\n\r\n            get description() {\r\n                const { type, system } = this.actor;\r\n                const actor = this.actor;\r\n                const isNPC = type === \"npc\";\r\n                const isPC = type === \"character\";\r\n                if (isNPC) {\r\n                    const creatureType = game.i18n.localize(CONFIG.DND5E.creatureTypes[actor.system.details.type.value] ?? actor.system.details.type.custom);\r\n                    const cr = system.details.cr >= 1 || system.details.cr <= 0 ? system.details.cr : `1/${1 / system.details.cr}`;\r\n                    return `CR ${cr} ${creatureType}`;\r\n                } else if (isPC) {\r\n                    const classes = Object.values(actor.classes)\r\n                        .map((c) => c.name)\r\n                        .join(\" / \");\r\n                    return `Level ${system.details.level} ${classes} (${system.details.race})`;\r\n                } else {\r\n                    return \"\";\r\n                }\r\n            }\r\n\r\n            get isDead() {\r\n                return this.isDying && this.actor.type !== \"character\";\r\n            }\r\n\r\n            get isDying() {\r\n                return this.actor.system.attributes.hp.value <= 0;\r\n            }\r\n\r\n            get successes() {\r\n                return this.actor.system.attributes?.death?.success ?? 0;\r\n            }\r\n\r\n            get failures() {\r\n                return this.actor.system.attributes?.death?.failure ?? 0;\r\n            }\r\n\r\n            async _onDeathSave(event) {\r\n                this.actor.rollDeathSave({});\r\n            }\r\n\r\n            async getStatBlocks() {\r\n                const HPText = game.i18n\r\n                    .localize(\"DND5E.HitPoints\")\r\n                    .split(\" \")\r\n                    .map((word) => word.charAt(0).toUpperCase())\r\n                    .join(\"\");\r\n                const ACText = game.i18n\r\n                    .localize(\"DND5E.ArmorClass\")\r\n                    .split(\" \")\r\n                    .map((word) => word.charAt(0).toUpperCase())\r\n                    .join(\"\");\r\n                const SpellDC = game.i18n.localize(\"DND5E.SaveDC\").replace(\"{ability}\", \"\").replace(\"{dc}\", \"\").trim();\r\n\r\n                const hpColor = this.actor.system.attributes.hp.temp ? \"#6698f3\" : \"rgb(0 255 170)\";\r\n                const tempMax = this.actor.system.attributes.hp.tempmax;\r\n                const hpMaxColor = tempMax ? (tempMax > 0 ? \"rgb(222 91 255)\" : \"#ffb000\") : \"rgb(255 255 255)\";\r\n\r\n                return [\r\n                    [\r\n                        {\r\n                            text: `${this.actor.system.attributes.hp.value + (this.actor.system.attributes.hp.temp ?? 0)}`,\r\n                            color: hpColor,\r\n                        },\r\n                        {\r\n                            text: `/`,\r\n                        },\r\n                        {\r\n                            text: `${this.actor.system.attributes.hp.max + (this.actor.system.attributes.hp.tempmax ?? 0)}`,\r\n                            color: hpMaxColor,\r\n                        },\r\n                        {\r\n                            text: HPText,\r\n                        },\r\n                    ],\r\n                    [\r\n                        {\r\n                            text: ACText,\r\n                        },\r\n                        {\r\n                            text: this.actor.system.attributes.ac.value,\r\n                            color: \"var(--ech-movement-baseMovement-background)\",\r\n                        },\r\n                    ],\r\n                    [\r\n                        {\r\n                            text: SpellDC,\r\n                        },\r\n                        {\r\n                            text: this.actor.system.attributes.spelldc,\r\n                            color: \"var(--ech-movement-baseMovement-background)\",\r\n                        },\r\n                    ],\r\n                ];\r\n            }\r\n        }\r\n\r\n        class DND5eDrawerPanel extends ARGON.DRAWER.DrawerPanel {\r\n            constructor(...args) {\r\n                super(...args);\r\n            }\r\n\r\n            get categories() {\r\n                const abilities = this.actor.system.abilities;\r\n                const skills = this.actor.system.skills;\r\n                const tools = this.actor.itemTypes.tool;\r\n\r\n                const addSign = (value) => {\r\n                    if (value >= 0) return `+${value}`;\r\n                    return value;\r\n                };\r\n\r\n                const abilitiesButtons = Object.keys(abilities).map((ability) => {\r\n                    const abilityData = abilities[ability];\r\n                    return new ARGON.DRAWER.DrawerButton([\r\n                        {\r\n                            label: CONFIG.DND5E.abilities[ability].label,\r\n                            onClick: (event) => this.actor.rollAbility(ability, { event }),\r\n                        },\r\n                        {\r\n                            label: addSign(abilityData.mod),\r\n                            onClick: (event) => this.actor.rollAbilityTest(ability, { event }),\r\n                        },\r\n                        {\r\n                            label: addSign(abilityData.save),\r\n                            onClick: (event) => this.actor.rollAbilitySave(ability, { event }),\r\n                        },\r\n                    ]);\r\n                });\r\n\r\n                const skillsButtons = Object.keys(skills).map((skill) => {\r\n                    const skillData = skills[skill];\r\n                    return new ARGON.DRAWER.DrawerButton([\r\n                        {\r\n                            label: CONFIG.DND5E.skills[skill].label,\r\n                            onClick: (event) => this.actor.rollSkill(skill, { event }),\r\n                        },\r\n                        {\r\n                            label: `${addSign(skillData.mod)}<span style=\"margin: 0 1rem; filter: brightness(0.8)\">(${skillData.passive})</span>`,\r\n                            style: \"display: flex; justify-content: flex-end;\",\r\n                        },\r\n                    ]);\r\n                });\r\n\r\n                const toolButtons = tools.map((tool) => {\r\n                    return new ARGON.DRAWER.DrawerButton([\r\n                        {\r\n                            label: tool.name,\r\n                            onClick: (event) => tool.rollToolCheck({ event }),\r\n                        },\r\n                        {\r\n                            label: addSign(abilities[tool.abilityMod].mod + tool.system.proficiencyMultiplier * this.actor.system.attributes.prof),\r\n                        },\r\n                    ]);\r\n                });\r\n\r\n                return [\r\n                    {\r\n                        gridCols: \"5fr 2fr 2fr\",\r\n                        captions: [\r\n                            {\r\n                                label: \"Abilities\",\r\n                                align: \"left\",\r\n                            },\r\n                            {\r\n                                label: \"Check\",\r\n                                align: \"center\",\r\n                            },\r\n                            {\r\n                                label: \"Save\",\r\n                                align: \"center\",\r\n                            },\r\n                        ],\r\n                        align: [\"left\", \"center\", \"center\"],\r\n                        buttons: abilitiesButtons,\r\n                    },\r\n                    {\r\n                        gridCols: \"7fr 2fr\",\r\n                        captions: [\r\n                            {\r\n                                label: \"Skills\",\r\n                            },\r\n                            {\r\n                                label: \"\",\r\n                            },\r\n                        ],\r\n                        buttons: skillsButtons,\r\n                    },\r\n                    {\r\n                        gridCols: \"7fr 2fr\",\r\n                        captions: [\r\n                            {\r\n                                label: \"Tools\",\r\n                            },\r\n                            {\r\n                                label: \"\",\r\n                            },\r\n                        ],\r\n                        buttons: toolButtons,\r\n                    },\r\n                ];\r\n            }\r\n\r\n            get title() {\r\n                return `${game.i18n.localize(\"enhancedcombathud-dnd5e.hud.saves.name\")} / ${game.i18n.localize(\"enhancedcombathud-dnd5e.hud.skills.name\")} / ${game.i18n.localize(\"enhancedcombathud-dnd5e.hud.tools.name\")}`;\r\n            }\r\n        }\r\n\r\n        class DND5eActionActionPanel extends ARGON.MAIN.ActionPanel {\r\n            constructor(...args) {\r\n                super(...args);\r\n            }\r\n\r\n            get label() {\r\n                return \"DND5E.Action\";\r\n            }\r\n\r\n            get hasAction() {\r\n                return true;\r\n            }\r\n\r\n            async _getButtons() {\r\n                const spellItems = this.actor.items.filter((item) => item.type === \"spell\" && actionTypes.action.includes(item.system.activation?.type));\r\n                const featItems = this.actor.items.filter((item) => item.type === \"feat\" && actionTypes.action.includes(item.system.activation?.type));\r\n                const consumableItems = this.actor.items.filter((item) => item.type === \"consumable\" && actionTypes.action.includes(item.system.activation?.type));\r\n\r\n                const specialActions = Object.values(ECHItems);\r\n\r\n                const buttons = [new DND5eItemButton({ item: null, isWeaponSet: true, isPrimary: true }), new ARGON.MAIN.BUTTONS.SplitButton(new DND5eSpecialActionButton(specialActions[0]), new DND5eSpecialActionButton(specialActions[1])), new DND5eButtonPanelButton({ type: \"spell\", items: spellItems, color: 0 }), new DND5eButtonPanelButton({ type: \"feat\", items: featItems, color: 0 }), new ARGON.MAIN.BUTTONS.SplitButton(new DND5eSpecialActionButton(specialActions[2]), new DND5eSpecialActionButton(specialActions[3])), new ARGON.MAIN.BUTTONS.SplitButton(new DND5eSpecialActionButton(specialActions[4]), new DND5eSpecialActionButton(specialActions[5])), new DND5eButtonPanelButton({ type: \"consumable\", items: consumableItems, color: 0 })];\r\n                return buttons.filter((button) => button.items == undefined || button.items.length);\r\n            }\r\n        }\r\n\r\n        class DND5eBonusActionPanel extends ARGON.MAIN.ActionPanel {\r\n            constructor(...args) {\r\n                super(...args);\r\n            }\r\n\r\n            get label() {\r\n                return \"DND5E.BonusAction\";\r\n            }\r\n\r\n            get hasAction() {\r\n                return true;\r\n            }\r\n\r\n            async _getButtons() {\r\n                const buttons = [new DND5eItemButton({ item: null, isWeaponSet: true, isPrimary: false })];\r\n                //buttons.push(new DND5eEquipmentButton({slot: 2}));\r\n                for (const [type, types] of Object.entries(itemTypes)) {\r\n                    const items = this.actor.items.filter((item) => types.includes(item.type) && actionTypes.bonus.includes(item.system.activation?.type));\r\n                    if (!items.length) continue;\r\n                    buttons.push(new DND5eButtonPanelButton({ type, items, color: 1 }));\r\n                }\r\n                return buttons;\r\n            }\r\n        }\r\n\r\n        class DND5eReactionActionPanel extends ARGON.MAIN.ActionPanel {\r\n            constructor(...args) {\r\n                super(...args);\r\n            }\r\n\r\n            get label() {\r\n                return \"DND5E.Reaction\";\r\n            }\r\n\r\n            get hasAction() {\r\n                return true;\r\n            }\r\n\r\n            async _getButtons() {\r\n                const buttons = [new DND5eItemButton({ item: null, isWeaponSet: true, isPrimary: true })];\r\n                //buttons.push(new DND5eEquipmentButton({slot: 1}));\r\n                for (const [type, types] of Object.entries(itemTypes)) {\r\n                    const items = this.actor.items.filter((item) => types.includes(item.type) && actionTypes.reaction.includes(item.system.activation?.type));\r\n                    if (!items.length) continue;\r\n                    buttons.push(new DND5eButtonPanelButton({ type, items, color: 3 }));\r\n                }\r\n                return buttons;\r\n            }\r\n        }\r\n\r\n        class DND5eFreeActionPanel extends ARGON.MAIN.ActionPanel {\r\n            constructor(...args) {\r\n                super(...args);\r\n            }\r\n\r\n            get label() {\r\n                return \"DND5E.Special\";\r\n            }\r\n\r\n            get hasAction() {\r\n                return true;\r\n            }\r\n\r\n            async _getButtons() {\r\n                const buttons = [];\r\n\r\n                for (const [type, types] of Object.entries(itemTypes)) {\r\n                    const items = this.actor.items.filter((item) => types.includes(item.type) && actionTypes.free.includes(item.system.activation?.type));\r\n                    if (!items.length) continue;\r\n                    buttons.push(new DND5eButtonPanelButton({ type, items, color: 2 }));\r\n                }\r\n                return buttons;\r\n            }\r\n        }\r\n\r\n        class DND5eItemButton extends ARGON.MAIN.BUTTONS.ItemButton {\r\n            constructor(...args) {\r\n                super(...args);\r\n            }\r\n\r\n            get hasTooltip() {\r\n                return true;\r\n            }\r\n\r\n            get ranges() {\r\n                const item = this.item;\r\n                const touchRange = item.system.range.units == \"touch\" ? canvas?.scene?.grid?.distance : null;\r\n                return {\r\n                    normal: item.system?.range?.value ?? touchRange,\r\n                    long: item.system?.range?.long ?? null,\r\n                };\r\n            }\r\n\r\n            get targets() {\r\n                const item = this.item;\r\n                const validTargets = [\"creature\", \"ally\", \"enemy\"];\r\n                const actionType = item.system.actionType;\r\n                const targetType = item.system.target?.type;\r\n                if (validTargets.includes(targetType)) {\r\n                    return item.system.target.value;\r\n                } else {\r\n                    if (actionType === \"mwak\" || actionType === \"rwak\") {\r\n                        return 1;\r\n                    }\r\n                }\r\n                return null;\r\n            }\r\n\r\n            async getTooltipData() {\r\n                const tooltipData = await getTooltipDetails(this.item);\r\n                tooltipData.propertiesLabel = \"enhancedcombathud-dnd5e.tooltip.properties.name\";\r\n                return tooltipData;\r\n            }\r\n\r\n            async _onLeftClick(event) {\r\n                ui.ARGON.interceptNextDialog(event.currentTarget);\r\n                const used = await this.item.use({ event }, { event });\r\n                if (used) {\r\n                    DND5eItemButton.consumeActionEconomy(this.item);\r\n                }\r\n            }\r\n\r\n            static consumeActionEconomy(item) {\r\n                const activationType = item.system.activation?.type;\r\n                let actionType = null;\r\n                for (const [type, types] of Object.entries(actionTypes)) {\r\n                    if (types.includes(activationType)) actionType = type;\r\n                }\r\n                if (!actionType) return;\r\n                if (actionType === \"action\") {\r\n                    ui.ARGON.components.main[0].isActionUsed = true;\r\n                } else if (actionType === \"bonus\") {\r\n                    ui.ARGON.components.main[1].isActionUsed = true;\r\n                } else if (actionType === \"reaction\") {\r\n                    ui.ARGON.components.main[2].isActionUsed = true;\r\n                } else if (actionType === \"free\") {\r\n                    ui.ARGON.components.main[3].isActionUsed = true;\r\n                }\r\n            }\r\n\r\n            async render(...args) {\r\n                await super.render(...args);\r\n                if (this.item?.system.consumableType === \"ammo\") {\r\n                    const weapons = this.actor.items.filter((item) => item.system.consume?.target === this.item.id);\r\n                    ui.ARGON.updateItemButtons(weapons);\r\n                }\r\n            }\r\n\r\n            get quantity() {\r\n                const showQuantityItemTypes = [\"consumable\"];\r\n                const consumeType = this.item.system.consume?.type;\r\n                if (consumeType === \"ammo\") {\r\n                    const ammoItem = this.actor.items.get(this.item.system.consume.target);\r\n                    if (!ammoItem) return null;\r\n                    return ammoItem.system.quantity;\r\n                } else if (consumeType === \"attribute\") {\r\n                    return getProperty(this.actor.system, this.item.system.consume.target);\r\n                } else if (showQuantityItemTypes.includes(this.item.type)) {\r\n                    return this.item.system.uses?.value ?? this.item.system.quantity;\r\n                }\r\n                return null;\r\n            }\r\n        }\r\n\r\n        class DND5eButtonPanelButton extends ARGON.MAIN.BUTTONS.ButtonPanelButton {\r\n            constructor({ type, items, color }) {\r\n                super();\r\n                this.type = type;\r\n                this.items = items;\r\n                this.color = color;\r\n            }\r\n\r\n            get colorScheme() {\r\n                return this.color;\r\n            }\r\n\r\n            get label() {\r\n                switch (this.type) {\r\n                    case \"spell\":\r\n                        return \"enhancedcombathud-dnd5e.hud.castspell.name\";\r\n                    case \"feat\":\r\n                        return \"enhancedcombathud-dnd5e.hud.usepower.name\";\r\n                    case \"consumable\":\r\n                        return \"enhancedcombathud-dnd5e.hud.useitem.name\";\r\n                }\r\n            }\r\n\r\n            get icon() {\r\n                switch (this.type) {\r\n                    case \"spell\":\r\n                        return \"modules/enhancedcombathud/icons/spell-book.svg\";\r\n                    case \"feat\":\r\n                        return \"modules/enhancedcombathud/icons/mighty-force.svg\";\r\n                    case \"consumable\":\r\n                        return \"modules/enhancedcombathud/icons/drink-me.svg\";\r\n                }\r\n            }\r\n\r\n            get showPreparedOnly() {\r\n                if (this.actor.type !== \"character\") return false;\r\n                const classes = Object.keys(this.actor.classes);\r\n                const requiresPreparation = [\"cleric\", \"druid\", \"paladin\", \"wizard\", \"artificer\", \"ranger\"].some((className) => classes.includes(className));\r\n                return requiresPreparation;\r\n            }\r\n\r\n            async _getPanel() {\r\n                if (this.type === \"spell\") {\r\n                    const spellLevels = CONFIG.DND5E.spellLevels;\r\n                    if (this.showPreparedOnly) {\r\n                        const allowIfNotPrepared = [\"atwill\", \"innate\", \"pact\"];\r\n                        this.items = this.items.filter((item) => {\r\n                            if (allowIfNotPrepared.includes(item.system.preparation.mode)) return true;\r\n                            if (item.system.level == 0) return true;\r\n                            return item.system.preparation.prepared;\r\n                        });\r\n                    }\r\n                    const spells = [\r\n                        {\r\n                            label: \"DND5E.SpellPrepAtWill\",\r\n                            buttons: this.items.filter((item) => item.system.preparation.mode === \"atwill\").map((item) => new DND5eItemButton({ item })),\r\n                            uses: { max: Infinity, value: Infinity },\r\n                        },\r\n                        {\r\n                            label: \"DND5E.SpellPrepInnate\",\r\n                            buttons: this.items.filter((item) => item.system.preparation.mode === \"innate\").map((item) => new DND5eItemButton({ item })),\r\n                            uses: { max: Infinity, value: Infinity },\r\n                        },\r\n                        {\r\n                            label: Object.values(spellLevels)[0],\r\n                            buttons: this.items.filter((item) => item.system.level == 0).map((item) => new DND5eItemButton({ item })),\r\n                            uses: { max: Infinity, value: Infinity },\r\n                        },\r\n                        {\r\n                            label: \"DND5E.PactMagic\",\r\n                            buttons: this.items.filter((item) => item.system.preparation.mode === \"pact\").map((item) => new DND5eItemButton({ item })),\r\n                            uses: this.actor.system.spells.pact,\r\n                        },\r\n                    ];\r\n                    for (const [level, label] of Object.entries(spellLevels)) {\r\n                        const levelSpells = this.items.filter((item) => item.system.level == level);\r\n                        if (!levelSpells.length || level == 0) continue;\r\n                        spells.push({\r\n                            label,\r\n                            buttons: levelSpells.map((item) => new DND5eItemButton({ item })),\r\n                            uses: this.actor.system.spells[`spell${level}`],\r\n                        });\r\n                    }\r\n                    return new ARGON.MAIN.BUTTON_PANELS.ACCORDION.AccordionPanel({ accordionPanelCategories: spells.filter((spell) => spell.buttons.length).map(({ label, buttons, uses }) => new ARGON.MAIN.BUTTON_PANELS.ACCORDION.AccordionPanelCategory({ label, buttons, uses })) });\r\n                } else {\r\n                    return new ARGON.MAIN.BUTTON_PANELS.ButtonPanel({ buttons: this.items.map((item) => new DND5eItemButton({ item })) });\r\n                }\r\n            }\r\n        }\r\n\r\n        class DND5eSpecialActionButton extends ARGON.MAIN.BUTTONS.ActionButton {\r\n            constructor(specialItem) {\r\n                super();\r\n                this.item = new CONFIG.Item.documentClass(specialItem, {\r\n                    parent: this.actor,\r\n                });\r\n            }\r\n\r\n            get label() {\r\n                return this.item.name;\r\n            }\r\n\r\n            get icon() {\r\n                return this.item.img;\r\n            }\r\n\r\n            get hasTooltip() {\r\n                return true;\r\n            }\r\n\r\n            async getTooltipData() {\r\n                const tooltipData = await getTooltipDetails(this.item);\r\n                tooltipData.propertiesLabel = \"enhancedcombathud-dnd5e.tooltip.properties.name\";\r\n                return tooltipData;\r\n            }\r\n\r\n            async _onLeftClick(event) {\r\n                const useCE = game.modules.get(\"dfreds-convenient-effects\")?.active && game.dfreds.effectInterface.findEffectByName(this.label);\r\n                let success = false;\r\n                if (useCE) {\r\n                    success = true;\r\n                    await game.dfreds.effectInterface.toggleEffect(this.label, { overlay: false, uuids: [this.actor.uuid] });\r\n                } else {\r\n                    success = await this.item.use({ event }, { event });\r\n                }\r\n                if (success) {\r\n                    DND5eItemButton.consumeActionEconomy(this.item);\r\n                }\r\n            }\r\n        }\r\n\r\n        class DND5eMovementHud extends ARGON.MovementHud {\r\n            get movementMax() {\r\n                return this.actor.system.attributes.movement.walk / canvas.scene.dimensions.distance;\r\n            }\r\n        }\r\n\r\n        class DND5eWeaponSets extends ARGON.WeaponSets {\r\n            async getDefaultSets() {\r\n                const sets = await super.getDefaultSets();\r\n                if (this.actor.type !== \"npc\") return sets;\r\n                const actions = this.actor.items.filter((item) => item.type === \"weapon\" && item.system.activation?.type === \"action\");\r\n                const bonus = this.actor.items.filter((item) => item.type === \"weapon\" && item.system.activation?.type === \"bonus\");\r\n                return {\r\n                    1: {\r\n                        primary: actions[0]?.uuid ?? null,\r\n                        secondary: bonus[0]?.uuid ?? null,\r\n                    },\r\n                    2: {\r\n                        primary: actions[1]?.uuid ?? null,\r\n                        secondary: bonus[1]?.uuid ?? null,\r\n                    },\r\n                    3: {\r\n                        primary: actions[2]?.uuid ?? null,\r\n                        secondary: bonus[2]?.uuid ?? null,\r\n                    },\r\n                };\r\n            }\r\n\r\n            async _onSetChange({ sets, active }) {\r\n                const switchEquip = game.settings.get(\"enhancedcombathud-dnd5e\", \"switchEquip\");\r\n                if (!switchEquip) return;\r\n                const updates = [];\r\n                const activeSet = sets[active];\r\n                const activeItems = Object.values(activeSet).filter((item) => item);\r\n                const inactiveSets = Object.values(sets).filter((set) => set !== activeSet);\r\n                const inactiveItems = inactiveSets.flatMap((set) => Object.values(set)).filter((item) => item);\r\n                activeItems.forEach((item) => {\r\n                    if (!item.system?.equipped) updates.push({ _id: item.id, \"system.equipped\": true });\r\n                });\r\n                inactiveItems.forEach((item) => {\r\n                    if (item.system?.equipped) updates.push({ _id: item.id, \"system.equipped\": false });\r\n                });\r\n                return await this.actor.updateEmbeddedDocuments(\"Item\", updates);\r\n            }\r\n        }\r\n\r\n        CoreHUD.definePortraitPanel(DND5ePortraitPanel);\r\n        CoreHUD.defineDrawerPanel(DND5eDrawerPanel);\r\n        CoreHUD.defineMainPanels([DND5eActionActionPanel, DND5eBonusActionPanel, DND5eReactionActionPanel, DND5eFreeActionPanel, ARGON.PREFAB.PassTurnPanel]);\r\n        CoreHUD.defineMovementHud(DND5eMovementHud);\r\n        CoreHUD.defineWeaponSets(DND5eWeaponSets);\r\n        CoreHUD.defineSupportedActorTypes([\"character\", \"npc\"]);\r\n    });\r\n}\r\n\r\nfunction registerItems() {\r\n    ECHItems[game.i18n.localize(\"enhancedcombathud-dnd5e.items.disengage.name\")] = {\r\n        name: game.i18n.localize(\"enhancedcombathud-dnd5e.items.disengage.name\"),\r\n        type: \"feat\",\r\n        img: \"modules/enhancedcombathud/icons/journey.svg\",\r\n        system: {\r\n            description: {\r\n                value: game.i18n.localize(\"enhancedcombathud-dnd5e.items.disengage.desc\"),\r\n                chat: \"\",\r\n                unidentified: \"\",\r\n            },\r\n            source: \"\",\r\n            quantity: 1,\r\n            weight: 0,\r\n            price: 0,\r\n            attuned: false,\r\n            attunement: 0,\r\n            equipped: false,\r\n            rarity: \"\",\r\n            identified: true,\r\n            activation: {\r\n                type: \"action\",\r\n                cost: 1,\r\n                condition: \"\",\r\n            },\r\n            duration: {\r\n                value: 1,\r\n                units: \"turn\",\r\n            },\r\n            target: {\r\n                value: null,\r\n                width: null,\r\n                units: \"\",\r\n                type: \"self\",\r\n            },\r\n            range: {\r\n                value: null,\r\n                long: null,\r\n                units: \"\",\r\n            },\r\n            consume: {\r\n                type: \"\",\r\n                target: \"\",\r\n                amount: null,\r\n            },\r\n            ability: \"\",\r\n            actionType: \"util\",\r\n            attackBonus: 0,\r\n            chatFlavor: \"\",\r\n            critical: null,\r\n            damage: {\r\n                parts: [],\r\n                versatile: \"\",\r\n            },\r\n            formula: \"\",\r\n            save: {\r\n                ability: \"\",\r\n                dc: null,\r\n                scaling: \"spell\",\r\n            },\r\n        },\r\n        effects: [\r\n            {\r\n                _id: \"8FtZnIC1vbyKZ6xF\",\r\n                changes: [],\r\n                disabled: false,\r\n                duration: {\r\n                    startTime: null,\r\n                    turns: 1,\r\n                },\r\n                icon: \"modules/enhancedcombathud/icons/journey.svg\",\r\n                label: \"Disengage\",\r\n                origin: \"Item.wyQkeuZkttllAFB1\",\r\n                transfer: false,\r\n                flags: {\r\n                    dae: {\r\n                        stackable: \"none\",\r\n                        macroRepeat: \"none\",\r\n                        specialDuration: [],\r\n                        transfer: false,\r\n                    },\r\n                },\r\n                tint: \"\",\r\n            },\r\n        ],\r\n        sort: 0,\r\n        flags: {\r\n            core: {\r\n                sourceId: \"Item.wyQkeuZkttllAFB1\",\r\n            },\r\n\r\n            \"midi-qol\": {\r\n                onUseMacroName: \"\",\r\n            },\r\n        },\r\n    };\r\n    ECHItems[game.i18n.localize(\"enhancedcombathud-dnd5e.items.dodge.name\")] = {\r\n        name: game.i18n.localize(\"enhancedcombathud-dnd5e.items.dodge.name\"),\r\n        type: \"feat\",\r\n        img: \"modules/enhancedcombathud/icons/armor-upgrade.svg\",\r\n        system: {\r\n            description: {\r\n                value: game.i18n.localize(\"enhancedcombathud-dnd5e.items.dodge.desc\"),\r\n                chat: \"\",\r\n                unidentified: \"\",\r\n            },\r\n            source: \"\",\r\n            quantity: 1,\r\n            weight: 0,\r\n            price: 0,\r\n            attuned: false,\r\n            attunement: 0,\r\n            equipped: false,\r\n            rarity: \"\",\r\n            identified: true,\r\n            activation: {\r\n                type: \"action\",\r\n                cost: 1,\r\n                condition: \"\",\r\n            },\r\n            duration: {\r\n                value: 1,\r\n                units: \"round\",\r\n            },\r\n            target: {\r\n                value: null,\r\n                width: null,\r\n                units: \"\",\r\n                type: \"self\",\r\n            },\r\n            range: {\r\n                value: null,\r\n                long: null,\r\n                units: \"\",\r\n            },\r\n\r\n            consume: {\r\n                type: \"\",\r\n                target: \"\",\r\n                amount: null,\r\n            },\r\n            ability: \"\",\r\n            actionType: \"util\",\r\n            attackBonus: 0,\r\n            chatFlavor: \"\",\r\n            critical: null,\r\n            damage: {\r\n                parts: [],\r\n                versatile: \"\",\r\n            },\r\n            formula: \"\",\r\n            save: {\r\n                ability: \"\",\r\n                dc: null,\r\n                scaling: \"spell\",\r\n            },\r\n            consumableType: \"trinket\",\r\n        },\r\n        effects: [\r\n            {\r\n                _id: \"2xH2YQ6pm430O0Aq\",\r\n                changes: [],\r\n                disabled: false,\r\n                duration: {\r\n                    startTime: null,\r\n                    rounds: 1,\r\n                },\r\n                icon: \"modules/enhancedcombathud/icons/armor-upgrade.svg\",\r\n                label: \"Dodge\",\r\n                origin: \"Item.pakEYcgLYxtKGv7J\",\r\n                transfer: false,\r\n                flags: {\r\n                    dae: {\r\n                        stackable: \"none\",\r\n                        macroRepeat: \"none\",\r\n                        specialDuration: [],\r\n                        transfer: false,\r\n                    },\r\n                },\r\n                tint: \"\",\r\n            },\r\n        ],\r\n        sort: 0,\r\n        flags: {\r\n\r\n            \"midi-qol\": {\r\n                onUseMacroName: \"\",\r\n            },\r\n        },\r\n    };\r\n    ECHItems[game.i18n.localize(\"enhancedcombathud-dnd5e.items.ready.name\")] = {\r\n        name: game.i18n.localize(\"enhancedcombathud-dnd5e.items.ready.name\"),\r\n        type: \"feat\",\r\n        img: \"modules/enhancedcombathud/icons/clockwork.svg\",\r\n        system: {\r\n            description: {\r\n                value: game.i18n.localize(\"enhancedcombathud-dnd5e.items.ready.desc\"),\r\n                chat: \"\",\r\n                unidentified: \"\",\r\n            },\r\n            source: \"\",\r\n            quantity: 1,\r\n            weight: 0,\r\n            price: 0,\r\n            attuned: false,\r\n            attunement: 0,\r\n            equipped: false,\r\n            rarity: \"\",\r\n            identified: true,\r\n            activation: {\r\n                type: \"action\",\r\n                cost: 1,\r\n                condition: \"\",\r\n            },\r\n            duration: {\r\n                value: null,\r\n                units: \"\",\r\n            },\r\n            target: {\r\n                value: null,\r\n                width: null,\r\n                units: \"\",\r\n                type: \"self\",\r\n            },\r\n            range: {\r\n                value: null,\r\n                long: null,\r\n                units: \"\",\r\n            },\r\n\r\n            consume: {\r\n                type: \"\",\r\n                target: \"\",\r\n                amount: null,\r\n            },\r\n            ability: \"\",\r\n            actionType: \"util\",\r\n            attackBonus: 0,\r\n            chatFlavor: \"\",\r\n            critical: null,\r\n            damage: {\r\n                parts: [],\r\n                versatile: \"\",\r\n            },\r\n            formula: \"\",\r\n            save: {\r\n                ability: \"\",\r\n                dc: null,\r\n                scaling: \"spell\",\r\n            },\r\n            consumableType: \"trinket\",\r\n        },\r\n        effects: [\r\n            {\r\n                _id: \"BevDb0J80M9BdoEl\",\r\n                changes: [],\r\n                disabled: false,\r\n                duration: {\r\n                    startTime: null,\r\n                    turns: 1,\r\n                },\r\n                icon: \"modules/enhancedcombathud/icons/clockwork.svg\",\r\n                label: \"Ready\",\r\n                transfer: false,\r\n                flags: {\r\n                    dae: {\r\n                        stackable: \"none\",\r\n                        macroRepeat: \"none\",\r\n                        specialDuration: [],\r\n                        transfer: false,\r\n                    },\r\n                },\r\n                tint: \"\",\r\n            },\r\n        ],\r\n        sort: 0,\r\n        flags: {\r\n\r\n            \"midi-qol\": {\r\n                onUseMacroName: \"\",\r\n            },\r\n        },\r\n    };\r\n    ECHItems[game.i18n.localize(\"enhancedcombathud-dnd5e.items.hide.name\")] = {\r\n        name: game.i18n.localize(\"enhancedcombathud-dnd5e.items.hide.name\"),\r\n        type: \"feat\",\r\n        img: \"modules/enhancedcombathud/icons/cloak-dagger.svg\",\r\n        system: {\r\n            description: {\r\n                value: game.i18n.localize(\"enhancedcombathud-dnd5e.items.hide.desc\"),\r\n                chat: \"\",\r\n                unidentified: \"\",\r\n            },\r\n            source: \"\",\r\n            quantity: 1,\r\n            weight: 0,\r\n            price: 0,\r\n            attuned: false,\r\n            attunement: 0,\r\n            equipped: false,\r\n            rarity: \"\",\r\n            identified: true,\r\n            activation: {\r\n                type: \"action\",\r\n                cost: 1,\r\n                condition: \"\",\r\n            },\r\n            duration: {\r\n                value: null,\r\n                units: \"\",\r\n            },\r\n            target: {\r\n                value: null,\r\n                width: null,\r\n                units: \"\",\r\n                type: \"self\",\r\n            },\r\n            range: {\r\n                value: null,\r\n                long: null,\r\n                units: \"\",\r\n            },\r\n\r\n            consume: {\r\n                type: \"\",\r\n                target: \"\",\r\n                amount: null,\r\n            },\r\n            recharge: {\r\n                value: null,\r\n                charged: false,\r\n            },\r\n            ability: \"\",\r\n            actionType: \"util\",\r\n            attackBonus: 0,\r\n            chatFlavor: \"\",\r\n            critical: null,\r\n            damage: {\r\n                parts: [],\r\n                versatile: \"\",\r\n            },\r\n            formula: \"\",\r\n            save: {\r\n                ability: \"\",\r\n                dc: null,\r\n                scaling: \"spell\",\r\n            },\r\n            consumableType: \"trinket\",\r\n        },\r\n        effects: [\r\n            {\r\n                _id: \"SZkbtgGCICrpH0GJ\",\r\n                changes: [],\r\n                disabled: false,\r\n                duration: {\r\n                    startTime: null,\r\n                    turns: 10,\r\n                },\r\n                icon: \"modules/enhancedcombathud/icons/cloak-dagger.svg\",\r\n                label: \"Hide\",\r\n                transfer: false,\r\n                flags: {\r\n                    dae: {\r\n                        stackable: \"none\",\r\n                        macroRepeat: \"none\",\r\n                        specialDuration: [],\r\n                        transfer: false,\r\n                    },\r\n                },\r\n                tint: \"\",\r\n            },\r\n        ],\r\n        sort: 0,\r\n        flags: {\r\n            \"midi-qol\": {\r\n                onUseMacroName: \"\",\r\n            },\r\n        },\r\n    };\r\n    ECHItems[game.i18n.localize(\"enhancedcombathud-dnd5e.items.dash.name\")] = {\r\n        name: game.i18n.localize(\"enhancedcombathud-dnd5e.items.dash.name\"),\r\n        type: \"feat\",\r\n        img: \"modules/enhancedcombathud/icons/walking-boot.svg\",\r\n        system: {\r\n            description: {\r\n                value: game.i18n.localize(\"enhancedcombathud-dnd5e.items.dash.desc\"),\r\n                chat: \"\",\r\n                unidentified: \"\",\r\n            },\r\n            source: \"\",\r\n            quantity: 1,\r\n            weight: 0,\r\n            price: 0,\r\n            attuned: false,\r\n            attunement: 0,\r\n            equipped: false,\r\n            rarity: \"\",\r\n            identified: true,\r\n            activation: {\r\n                type: \"action\",\r\n                cost: 1,\r\n                condition: \"\",\r\n            },\r\n            duration: {\r\n                value: null,\r\n                units: \"\",\r\n            },\r\n            target: {\r\n                value: null,\r\n                width: null,\r\n                units: \"\",\r\n                type: \"self\",\r\n            },\r\n            range: {\r\n                value: null,\r\n                long: null,\r\n                units: \"\",\r\n            },\r\n\r\n            consume: {\r\n                type: \"\",\r\n                target: \"\",\r\n                amount: null,\r\n            },\r\n            ability: \"\",\r\n            actionType: \"util\",\r\n            attackBonus: 0,\r\n            chatFlavor: \"\",\r\n            critical: null,\r\n            damage: {\r\n                parts: [],\r\n                versatile: \"\",\r\n            },\r\n            formula: \"\",\r\n            save: {\r\n                ability: \"\",\r\n                dc: null,\r\n                scaling: \"spell\",\r\n            },\r\n            consumableType: \"trinket\",\r\n        },\r\n        effects: [\r\n            {\r\n                _id: \"PPMPZY1t3AUB7UGA\",\r\n                changes: [],\r\n                disabled: false,\r\n                duration: {\r\n                    startTime: null,\r\n                    rounds: 1,\r\n                },\r\n                icon: \"modules/enhancedcombathud/icons/walking-boot.svg\",\r\n                label: \"Dash\",\r\n                transfer: false,\r\n                flags: {\r\n                    dae: {\r\n                        stackable: \"none\",\r\n                        macroRepeat: \"none\",\r\n                        specialDuration: [],\r\n                        transfer: false,\r\n                    },\r\n                },\r\n                tint: \"\",\r\n            },\r\n        ],\r\n        sort: 0,\r\n        flags: {\r\n\r\n            \"midi-qol\": {\r\n                onUseMacroName: \"\",\r\n            },\r\n        },\r\n    };\r\n    ECHItems[game.i18n.localize(\"enhancedcombathud-dnd5e.items.shove.name\")] = {\r\n        name: game.i18n.localize(\"enhancedcombathud-dnd5e.items.shove.name\"),\r\n        type: \"feat\",\r\n        img: \"modules/enhancedcombathud/icons/shield-bash.svg\",\r\n        system: {\r\n            description: {\r\n                value: game.i18n.localize(\"enhancedcombathud-dnd5e.items.shove.desc\"),\r\n                chat: \"\",\r\n                unidentified: \"\",\r\n            },\r\n            source: \"\",\r\n            quantity: 1,\r\n            weight: 0,\r\n            price: 0,\r\n            attuned: false,\r\n            attunement: 0,\r\n            equipped: false,\r\n            rarity: \"\",\r\n            identified: true,\r\n            activation: {\r\n                type: \"action\",\r\n                cost: 1,\r\n                condition: \"\",\r\n            },\r\n            duration: {\r\n                value: null,\r\n                units: \"\",\r\n            },\r\n            target: {\r\n                value: 1,\r\n                width: null,\r\n                units: \"\",\r\n                type: \"creature\",\r\n            },\r\n            range: {\r\n                value: null,\r\n                long: null,\r\n                units: \"touch\",\r\n            },\r\n\r\n            consume: {\r\n                type: \"\",\r\n                target: \"\",\r\n                amount: null,\r\n            },\r\n            ability: \"\",\r\n            actionType: \"util\",\r\n            attackBonus: 0,\r\n            chatFlavor: \"\",\r\n            critical: null,\r\n            damage: {\r\n                parts: [],\r\n                versatile: \"\",\r\n            },\r\n            formula: \"\",\r\n            save: {\r\n                ability: \"\",\r\n                dc: null,\r\n                scaling: \"spell\",\r\n            },\r\n            consumableType: \"trinket\",\r\n        },\r\n        effects: [],\r\n        sort: 0,\r\n        flags: {\r\n\r\n            \"midi-qol\": {\r\n                onUseMacroName: \"\",\r\n            },\r\n        },\r\n    };\r\n\r\n    if (game.settings.get(\"enhancedcombathud-dnd5e\", \"noAA\")) {\r\n        for (let key of Object.keys(ECHItems)) {\r\n            delete ECHItems[key].effects;\r\n        }\r\n    }\r\n}","import { MODULE_ID } from \"./main.js\";\r\n\r\nexport function registerSettings() {\r\n    const settings = {\r\n        showWeaponsItems: {\r\n            name: game.i18n.localize(\"enhancedcombathud-dnd5e.settings.showWeaponsItems.name\"),\r\n            hint: game.i18n.localize(\"enhancedcombathud-dnd5e.settings.showWeaponsItems.hint\"),\r\n            scope: \"world\",\r\n            config: true,\r\n            type: Boolean,\r\n            default: false,\r\n            onChange: () => ui.ARGON.refresh(),\r\n        },\r\n        switchEquip: {\r\n            name: game.i18n.localize(\"enhancedcombathud-dnd5e.settings.switchEquip.name\"),\r\n            hint: game.i18n.localize(\"enhancedcombathud-dnd5e.settings.switchEquip.hint\"),\r\n            scope: \"world\",\r\n            config: true,\r\n            type: Boolean,\r\n            default: true,\r\n            onChange: () => ui.ARGON.refresh(),\r\n        },\r\n        noAA: {\r\n            name: game.i18n.localize(\"enhancedcombathud-dnd5e.settings.noAA.name\"),\r\n            hint: game.i18n.localize(\"enhancedcombathud-dnd5e.settings.noAA.hint\"),\r\n            scope: \"world\",\r\n            config: true,\r\n            type: Boolean,\r\n            default: false,\r\n            onChange: () => ui.ARGON.refresh(),\r\n        },\r\n    };\r\n\r\n    registerSettingsArray(settings);\r\n}\r\n\r\nexport function getSetting(key) {\r\n    return game.settings.get(MODULE_ID, key);\r\n}\r\n\r\nexport async function setSetting(key, value) {\r\n    return await game.settings.set(MODULE_ID, key, value);\r\n}\r\n\r\nfunction registerSettingsArray(settings) {\r\n    for(const [key, value] of Object.entries(settings)) {\r\n        game.settings.register(MODULE_ID, key, value);\r\n    }\r\n}","import {initConfig} from \"./config.js\";\r\nimport { registerSettings } from \"./settings.js\";\r\n\r\nexport const MODULE_ID = \"enhancedcombathud-dnd5e\";\r\n\r\nHooks.on(\"init\", () => {\r\n    registerSettings();\r\n});\r\n\r\nHooks.on(\"setup\", () => {\r\n    initConfig();\r\n});"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","_regeneratorRuntime","Op","hasOwn","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","_typeof","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","undefined","done","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","methodName","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","doneResult","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","input","hint","prim","toPrimitive","res","String","_toPrimitive","_createClass","protoProps","staticProps","_inherits","subClass","superClass","_setPrototypeOf","p","bind","_createSuper","Derived","hasNativeReflectConstruct","Reflect","construct","sham","Proxy","Boolean","valueOf","e","_isNativeReflectConstruct","Super","_getPrototypeOf","NewTarget","arguments","apply","ReferenceError","_assertThisInitialized","_possibleConstructorReturn","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","args","ECHItems","_arrayLikeToArray","arr","len","arr2","Array","MODULE_ID","Hooks","on","settings","_i","_Object$entries","entries","_Object$entries$_i","isArray","_arrayWithHoles","_s","_e","_x","_r","_arr","_n","_d","_iterableToArrayLimit","minLen","n","toString","from","test","_unsupportedIterableToArray","_nonIterableRest","game","register","registerSettingsArray","showWeaponsItems","i18n","localize","scope","config","default","onChange","ui","ARGON","refresh","switchEquip","noAA","CoreHUD","system","id","img","description","chat","unidentified","source","quantity","weight","price","attuned","attunement","equipped","rarity","identified","activation","cost","condition","duration","units","width","range","long","consume","amount","ability","actionType","attackBonus","chatFlavor","critical","damage","parts","versatile","formula","save","dc","scaling","effects","_id","changes","disabled","startTime","turns","icon","label","origin","transfer","flags","dae","stackable","macroRepeat","specialDuration","tint","sort","core","sourceId","onUseMacroName","consumableType","rounds","recharge","charged","_i7","_Object$keys","registerItems","actionTypes","action","bonus","reaction","free","itemTypes","spell","feat","consumable","DND5ePortraitPanel","_ARGON$PORTRAIT$Portr","_getStatBlocks","_onDeathSave2","_super","_len","_key","concat","_this$actor","this","actor","isPC","_CONFIG$DND5E$creatur","creatureType","CONFIG","DND5E","creatureTypes","details","custom","cr","classes","map","c","join","level","race","isDying","attributes","hp","_this$actor$system$at","_this$actor$system$at2","death","success","_this$actor$system$at3","_this$actor$system$at4","failure","_callee","event","_context","rollDeathSave","_x3","_callee2","_this$actor$system$at5","_this$actor$system$at6","HPText","ACText","SpellDC","hpColor","tempMax","hpMaxColor","_context2","split","word","toUpperCase","replace","trim","temp","tempmax","text","color","max","ac","spelldc","PORTRAIT","PortraitPanel","DND5eDrawerPanel","_ARGON$DRAWER$DrawerP","_super2","_len2","_key2","_this","abilities","skills","tools","tool","addSign","gridCols","captions","align","buttons","abilityData","DRAWER","DrawerButton","onClick","rollAbility","mod","rollAbilityTest","rollAbilitySave","skill","skillData","rollSkill","passive","style","rollToolCheck","abilityMod","proficiencyMultiplier","prof","DrawerPanel","DND5eActionActionPanel","_ARGON$MAIN$ActionPan","_getButtons2","_super3","_len3","_key3","_callee3","spellItems","featItems","consumableItems","specialActions","_context3","items","filter","item","_item$system$activati","includes","_item$system$activati2","_item$system$activati3","DND5eItemButton","isWeaponSet","isPrimary","MAIN","BUTTONS","SplitButton","DND5eSpecialActionButton","DND5eButtonPanelButton","button","ActionPanel","DND5eBonusActionPanel","_ARGON$MAIN$ActionPan2","_getButtons3","_super4","_len4","_key4","_callee4","_loop","_this2","_context5","types","_context4","_slicedToArray","_item$system$activati4","t0","DND5eReactionActionPanel","_ARGON$MAIN$ActionPan3","_getButtons4","_super5","_len5","_key5","_callee5","_loop2","_i2","_Object$entries2","_this3","_context7","_Object$entries2$_i","_context6","_item$system$activati5","DND5eFreeActionPanel","_ARGON$MAIN$ActionPan4","_getButtons5","_super6","_len6","_key6","_callee6","_loop3","_i3","_Object$entries3","_this4","_context9","_Object$entries3$_i","_context8","_item$system$activati6","_ARGON$MAIN$BUTTONS$I","_render","_onLeftClick2","_getTooltipData","_super7","_len7","_key7","_canvas","_item$system$range$va","_item$system","_item$system$range$lo","_item$system2","touchRange","canvas","scene","grid","distance","normal","_item$system$target","targetType","_callee7","tooltipData","_context10","getTooltipDetails","propertiesLabel","_callee8","_context11","interceptNextDialog","currentTarget","use","consumeActionEconomy","_x4","_callee9","_get2","_this$item","_len8","_key8","weapons","_this5","_args12","_context12","_get","_item$system$consume","updateItemButtons","_this$item$system$con","_this$item$system$use","_this$item$system$use2","consumeType","ammoItem","getProperty","uses","_item$system$activati7","activationType","_i4","_Object$entries4","_Object$entries4$_i","components","main","isActionUsed","ItemButton","_ARGON$MAIN$BUTTONS$B","_getPanel2","_super8","_ref","_this6","some","className","_callee10","spellLevels","allowIfNotPrepared","spells","_loop4","_i5","_Object$entries5","_this7","_context14","showPreparedOnly","preparation","mode","prepared","Infinity","pact","_Object$entries5$_i","levelSpells","_context13","BUTTON_PANELS","ACCORDION","AccordionPanel","accordionPanelCategories","_ref2","AccordionPanelCategory","ButtonPanel","ButtonPanelButton","_ARGON$MAIN$BUTTONS$A","_onLeftClick3","_getTooltipData2","_super9","specialItem","_this8","Item","documentClass","parent","_callee11","_context15","_callee12","_game$modules$get","useCE","_context16","modules","active","dfreds","effectInterface","findEffectByName","toggleEffect","overlay","uuids","uuid","_x5","ActionButton","DND5eMovementHud","_ARGON$MovementHud","_super10","movement","walk","dimensions","MovementHud","DND5eWeaponSets","_ARGON$WeaponSets","_onSetChange2","_getDefaultSets","_super11","_callee13","_actions$0$uuid","_actions$","_bonus$0$uuid","_bonus$","_actions$1$uuid","_actions$2","_bonus$1$uuid","_bonus$2","_actions$2$uuid","_actions$3","_bonus$2$uuid","_bonus$3","sets","actions","_context17","_item$system$activati8","_item$system$activati9","primary","secondary","_callee14","_ref3","updates","activeSet","activeItems","inactiveSets","inactiveItems","_context18","set","flatMap","_item$system3","_item$system4","updateEmbeddedDocuments","_x6","WeaponSets","definePortraitPanel","defineDrawerPanel","defineMainPanels","PREFAB","PassTurnPanel","defineMovementHud","defineWeaponSets","defineSupportedActorTypes","_x2","_getTooltipDetails","_callee15","_damageTypes","_properties","title","itemType","subtitle","dt","damageTypes","properties","materialComponents","_item$labels","_item$labels2","_item$labels3","_i6","_Object$entries6","_Object$entries6$_i","_iterator","_step","comp","tooltipProperties","_context19","hudData","tooltip","saves","labels","weaponTypes","weaponType","itemActionTypes","weaponProperties","school","spellSchools","_createForOfIteratorHelper","all","s","abbr","f","materials","consumableTypes","requirements","TextEditor","enrichHTML","d","footerText"],"sourceRoot":""}