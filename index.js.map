{"version":3,"file":"./index.js","mappings":"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","sources":["webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///./scripts/config.js","webpack:///./scripts/settings.js","webpack:///./scripts/main.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","import { MODULE_ID } from \"./main.js\";\r\n\r\nconst ECHItems = {};\r\n\r\nexport function initConfig() {\r\n    Hooks.on(\"argonInit\", (CoreHUD) => {\r\n        if (game.system.id !== \"dnd5e\") return;\r\n        registerItems();\r\n        const ARGON = CoreHUD.ARGON;\r\n\r\n        const isMIDI = game.modules.get(\"midi-qol\")?.active;\r\n        const getMidiFlag = (actionType) => {\r\n            if (!isMIDI || !ui.ARGON._actor) return null;\r\n            const flag = ui.ARGON._actor.getFlag(\"midi-qol\", \"actions\") ?? {};\r\n            const value = flag[actionType] ?? false;\r\n            const midiAction = value ? 0 : 1;\r\n            return midiAction;\r\n        };\r\n\r\n        const getActivationType = (item) => {\r\n            if (!item?.system?.activities) {\r\n                return\r\n            }\r\n            return Array.from(item.system.activities)[0]?.activation?.type;\r\n        }\r\n\r\n        const getActionType = (item) => {\r\n            if (!item?.system?.activities) {\r\n                return\r\n            }\r\n            return Array.from(item.system.activities)[0]?.actionType;\r\n        }\r\n\r\n        const actionTypes = {\r\n            action: [\"action\"],\r\n            bonus: [\"bonus\"],\r\n            reaction: [\"reaction\", \"reactiondamage\", \"reactionmanual\"],\r\n            free: [\"special\"],\r\n        };\r\n\r\n        const itemTypes = {\r\n            spell: [\"spell\"],\r\n            feat: [\"feat\"],\r\n            consumable: [\"consumable\", \"equipment\", \"loot\"],\r\n        };\r\n\r\n        const mainBarFeatures = [];\r\n\r\n        if (game.settings.get(MODULE_ID, \"showWeaponsItems\")) itemTypes.consumable.push(\"weapon\");\r\n        if (game.settings.get(MODULE_ID, \"showClassActions\")) mainBarFeatures.push(\"class\");\r\n\r\n        CoreHUD.DND5E = {\r\n            actionTypes,\r\n            itemTypes,\r\n            mainBarFeatures,\r\n            ECHItems,\r\n        };\r\n\r\n        Hooks.callAll(\"enhanced-combat-hud.dnd5e.initConfig\", { actionTypes, itemTypes, ECHItems });\r\n\r\n        async function getTooltipDetails(item, type) {\r\n            let title, description, itemType, subtitle, target, range, dt;\r\n            let damageTypes = [];\r\n            let properties = [];\r\n            let materialComponents = \"\";\r\n\r\n            if (type == \"skill\") {\r\n                title = CONFIG.DND5E.skills[item].label;\r\n                description = game.i18n.localize(`enhancedcombathud-dnd5e.skills.${item}.tooltip`);\r\n            } else if (type == \"save\") {\r\n                title = CONFIG.DND5E.abilities[item].label;\r\n                description = game.i18n.localize(`enhancedcombathud-dnd5e.abilities.${item}.tooltip`);\r\n            } else {\r\n                if (!item || !item.system) return;\r\n\r\n                title = item.name;\r\n                description = item.system.identified ? item.system.description.value : item.system.description.unidentified ?? item.system.description.value;\r\n                itemType = item.type;\r\n                target = item.labels?.target || \"-\";\r\n                range = item.labels?.range || \"-\";\r\n                properties = [];\r\n                dt = item.labels?.damageTypes?.split(\", \");\r\n                damageTypes = dt && dt.length ? dt : [];\r\n                materialComponents = \"\";\r\n\r\n                switch (itemType) {\r\n                    case \"weapon\":\r\n                        subtitle = CONFIG.DND5E.weaponTypes[item.system.weaponType];\r\n                        properties.push(CONFIG.DND5E.itemActionTypes[getActionType(item)]);\r\n                        for (let [key, value] of Object.entries(item.system.properties)) {\r\n                            let prop = value && CONFIG.DND5E.weaponProperties[key] ? CONFIG.DND5E.weaponProperties[key] : undefined;\r\n                            if (prop) properties.push(prop);\r\n                        }\r\n                        break;\r\n                    case \"spell\":\r\n                        subtitle = `${item.labels.level} ${item.labels.school}`;\r\n                        properties.push(CONFIG.DND5E.spellSchools[item.system.school]);\r\n                        properties.push(item.labels.duration);\r\n                        properties.push(item.labels.save);\r\n                        for (let comp of item.labels.components.all) {\r\n                            properties.push(comp.abbr);\r\n                        }\r\n                        if (item.labels.materials) materialComponents = item.labels.materials;\r\n                        break;\r\n                    case \"consumable\":\r\n                        subtitle = CONFIG.DND5E.consumableTypes[item.system.consumableType];\r\n                        properties.push(CONFIG.DND5E.itemActionTypes[getActionType(item)]);\r\n                        break;\r\n                    case \"feat\":\r\n                        subtitle = item.system.requirements;\r\n                        properties.push(CONFIG.DND5E.itemActionTypes[getActionType(item)]);\r\n                        break;\r\n                }\r\n            }\r\n\r\n            if (description) description = await TextEditor.enrichHTML(description, { async: true });\r\n            let details = [];\r\n            if (target || range) {\r\n                details = [\r\n                    {\r\n                        label: \"enhancedcombathud-dnd5e.tooltip.target.name\",\r\n                        value: target,\r\n                    },\r\n                    {\r\n                        label: \"enhancedcombathud-dnd5e.tooltip.range.name\",\r\n                        value: range,\r\n                    },\r\n                ];\r\n            }\r\n            if (item?.labels?.toHit) {\r\n                details.push({\r\n                    label: \"enhancedcombathud-dnd5e.tooltip.toHit.name\",\r\n                    value: item.labels.toHit,\r\n                });\r\n            }\r\n            if (item?.labels?.derivedDamage?.length) {\r\n                let dmgString = \"\";\r\n                item.labels.derivedDamage.forEach((dDmg) => {\r\n                    dmgString += dDmg.formula + \" \" + getDamageTypeIcon(dDmg.damageType) + \" \";\r\n                });\r\n                details.push({\r\n                    label: \"enhancedcombathud-dnd5e.tooltip.damage.name\",\r\n                    value: dmgString,\r\n                });\r\n            }\r\n\r\n            const tooltipProperties = [];\r\n            if (damageTypes?.length) damageTypes.forEach((d) => tooltipProperties.push({ label: d, primary: true }));\r\n            if (properties?.length) properties.forEach((p) => tooltipProperties.push({ label: p?.label ?? p, secondary: true }));\r\n            return { title, description, subtitle, details, properties: tooltipProperties, footerText: materialComponents };\r\n        }\r\n\r\n        function getDamageTypeIcon(damageType) {\r\n            switch (damageType.toLowerCase()) {\r\n                case \"acid\":\r\n                    return '<i class=\"fas fa-flask\"></i>';\r\n                case \"bludgeoning\":\r\n                    return '<i class=\"fas fa-hammer\"></i>';\r\n                case \"cold\":\r\n                    return '<i class=\"fas fa-snowflake\"></i>';\r\n                case \"fire\":\r\n                    return '<i class=\"fas fa-fire\"></i>';\r\n                case \"force\":\r\n                    return '<i class=\"fas fa-hand-sparkles\"></i>';\r\n                case \"lightning\":\r\n                    return '<i class=\"fas fa-bolt\"></i>';\r\n                case \"necrotic\":\r\n                    return '<i class=\"fas fa-skull\"></i>';\r\n                case \"piercing\":\r\n                    return '<i class=\"fas fa-crosshairs\"></i>';\r\n                case \"poison\":\r\n                    return '<i class=\"fas fa-skull-crossbones\"></i>';\r\n                case \"psychic\":\r\n                    return '<i class=\"fas fa-brain\"></i>';\r\n                case \"radiant\":\r\n                    return '<i class=\"fas fa-sun\"></i>';\r\n                case \"slashing\":\r\n                    return '<i class=\"fas fa-cut\"></i>';\r\n                case \"thunder\":\r\n                    return '<i class=\"fas fa-bell\"></i>';\r\n                case \"healing\":\r\n                    return '<i class=\"fas fa-heart\"></i>';\r\n                default:\r\n                    return \"\";\r\n            }\r\n        }\r\n\r\n        function getProficiencyIcon(proficiency) {\r\n            if (proficiency == 0) return '<i style=\"margin-right: 1ch; pointer-events: none\" class=\"far fa-circle\"> </i>';\r\n            else if (proficiency == 1) return '<i style=\"margin-right: 1ch; pointer-events: none\" class=\"fas fa-check\"> </i>';\r\n            else if (proficiency == 2) return '<i style=\"margin-right: 1ch; pointer-events: none\" class=\"fas fa-check-double\"> </i>';\r\n            else if (proficiency == 0.5) return '<i style=\"margin-right: 1ch; pointer-events: none\" class=\"fas fa-adjust\"> </i>';\r\n            else return '<i style=\"margin-right: 1ch; pointer-events: none\" class=\"far fa-circle\"> </i>';\r\n        }\r\n\r\n        function condenseItemButtons(items) {\r\n            const condenseClassActions = game.settings.get(MODULE_ID, \"condenseClassActions\");\r\n            if (!condenseClassActions) return items.map((item) => new DND5eItemButton({ item, inActionPanel: true }));\r\n            const condensedItems = [];\r\n            const barItemsLength = items.length;\r\n            const barItemsMultipleOfTwo = barItemsLength - (barItemsLength % 2);\r\n            let currentSplitButtonItemButton = null;\r\n            for (let i = 0; i < barItemsLength; i++) {\r\n                const isCondensedButton = i < barItemsMultipleOfTwo;\r\n                const item = items[i];\r\n                if (isCondensedButton) {\r\n                    if (currentSplitButtonItemButton) {\r\n                        const button = new DND5eItemButton({ item, inActionPanel: false });\r\n                        condensedItems.push(new ARGON.MAIN.BUTTONS.SplitButton(currentSplitButtonItemButton, button));\r\n                        currentSplitButtonItemButton = null;\r\n                    } else {\r\n                        currentSplitButtonItemButton = new DND5eItemButton({ item, inActionPanel: false });\r\n                    }\r\n                } else {\r\n                    condensedItems.push(new DND5eItemButton({ item, inActionPanel: true }));\r\n                }\r\n            }\r\n            return condensedItems;\r\n        }\r\n\r\n        class DND5ePortraitPanel extends ARGON.PORTRAIT.PortraitPanel {\r\n            constructor(...args) {\r\n                super(...args);\r\n            }\r\n\r\n            get description() {\r\n                const { type, system } = this.actor;\r\n                const actor = this.actor;\r\n                const isNPC = type === \"npc\";\r\n                const isPC = type === \"character\";\r\n                if (isNPC) {\r\n                    const creatureType = game.i18n.localize(CONFIG.DND5E.creatureTypes[actor.system.details.type.value]?.label ?? actor.system.details.type.custom);\r\n                    const cr = system.details.cr >= 1 || system.details.cr <= 0 ? system.details.cr : `1/${1 / system.details.cr}`;\r\n                    return `CR ${cr} ${creatureType}`;\r\n                } else if (isPC) {\r\n                    const classes = Object.values(actor.classes)\r\n                        .map((c) => c.name)\r\n                        .join(\" / \");\r\n                    return `Level ${system.details.level} ${classes} (${system.details.race})`;\r\n                } else {\r\n                    return \"\";\r\n                }\r\n            }\r\n\r\n            get isDead() {\r\n                return this.isDying && this.actor.type !== \"character\";\r\n            }\r\n\r\n            get isDying() {\r\n                return this.actor.system.attributes.hp.value <= 0;\r\n            }\r\n\r\n            get successes() {\r\n                return this.actor.system.attributes?.death?.success ?? 0;\r\n            }\r\n\r\n            get failures() {\r\n                return this.actor.system.attributes?.death?.failure ?? 0;\r\n            }\r\n\r\n            get configurationTemplate() {\r\n                return \"modules/enhancedcombathud-dnd5e/templates/argon-actor-config.hbs\";\r\n            }\r\n\r\n            async _onDeathSave(event) {\r\n                this.actor.rollDeathSave({});\r\n            }\r\n\r\n            async getStatBlocks() {\r\n                const HPText = game.i18n\r\n                    .localize(\"DND5E.HitPoints\")\r\n                    .split(\" \")\r\n                    .map((word) => word.charAt(0).toUpperCase())\r\n                    .join(\"\");\r\n                const ACText = game.i18n\r\n                    .localize(\"DND5E.ArmorClass\")\r\n                    .split(\" \")\r\n                    .map((word) => word.charAt(0).toUpperCase())\r\n                    .join(\"\");\r\n                const SpellDC = game.i18n.localize(\"DND5E.SaveDC\").replace(\"{ability}\", \"\").replace(\"{dc}\", \"\").trim();\r\n\r\n                const hpColor = this.actor.system.attributes.hp.temp ? \"#6698f3\" : \"rgb(0 255 170)\";\r\n                const tempMax = this.actor.system.attributes.hp.tempmax;\r\n                const hpMaxColor = tempMax ? (tempMax > 0 ? \"rgb(222 91 255)\" : \"#ffb000\") : \"rgb(255 255 255)\";\r\n\r\n                return [\r\n                    [\r\n                        {\r\n                            text: `${this.actor.system.attributes.hp.value + (this.actor.system.attributes.hp.temp ?? 0)}`,\r\n                            color: hpColor,\r\n                        },\r\n                        {\r\n                            text: `/`,\r\n                        },\r\n                        {\r\n                            text: `${this.actor.system.attributes.hp.max + (this.actor.system.attributes.hp.tempmax ?? 0)}`,\r\n                            color: hpMaxColor,\r\n                        },\r\n                        {\r\n                            text: HPText,\r\n                        },\r\n                    ],\r\n                    [\r\n                        {\r\n                            text: ACText,\r\n                        },\r\n                        {\r\n                            text: this.actor.system.attributes.ac.value,\r\n                            color: \"var(--ech-movement-baseMovement-background)\",\r\n                        },\r\n                    ],\r\n                    [\r\n                        {\r\n                            text: SpellDC,\r\n                        },\r\n                        {\r\n                            text: this.actor.system.attributes.spelldc,\r\n                            color: \"var(--ech-movement-baseMovement-background)\",\r\n                        },\r\n                    ],\r\n                ];\r\n            }\r\n        }\r\n\r\n        class DND5eDrawerButton extends ARGON.DRAWER.DrawerButton {\r\n            constructor(buttons, item, type) {\r\n                super(buttons);\r\n                this.item = item;\r\n                this.type = type;\r\n            }\r\n\r\n            get hasTooltip() {\r\n                return true;\r\n            }\r\n\r\n            get tooltipOrientation() {\r\n                return TooltipManager.TOOLTIP_DIRECTIONS.RIGHT;\r\n            }\r\n\r\n            async getTooltipData() {\r\n                const tooltipData = await getTooltipDetails(this.item, this.type);\r\n                return tooltipData;\r\n            }\r\n        }\r\n\r\n        class DND5eDrawerPanel extends ARGON.DRAWER.DrawerPanel {\r\n            constructor(...args) {\r\n                super(...args);\r\n            }\r\n\r\n            get categories() {\r\n                const abilities = this.actor.system.abilities;\r\n                const skills = this.actor.system.skills;\r\n                const tools = this.actor.itemTypes.tool;\r\n\r\n                const addSign = (value) => {\r\n                    if (value >= 0) return `+${value}`;\r\n                    return value;\r\n                };\r\n\r\n                const abilitiesButtons = Object.keys(abilities).map((ability) => {\r\n                    const abilityData = abilities[ability];\r\n                    return new DND5eDrawerButton(\r\n                        [\r\n                            {\r\n                                label: CONFIG.DND5E.abilities[ability].label,\r\n                                onClick: (event) => this.actor.rollAbility(ability, { event }),\r\n                            },\r\n                            {\r\n                                label: addSign(abilityData.mod + (abilityData.checkBonus || 0)),\r\n                                onClick: (event) => this.actor.rollAbilityTest(ability, { event }),\r\n                            },\r\n                            {\r\n                                label: addSign(abilityData.save),\r\n                                onClick: (event) => this.actor.rollAbilitySave(ability, { event }),\r\n                            },\r\n                        ],\r\n                        ability,\r\n                        \"save\",\r\n                    );\r\n                });\r\n\r\n                const skillsButtons = Object.keys(skills).map((skill) => {\r\n                    const skillData = skills[skill];\r\n                    return new DND5eDrawerButton(\r\n                        [\r\n                            {\r\n                                label: getProficiencyIcon(skillData.proficient) + CONFIG.DND5E.skills[skill].label,\r\n                                onClick: (event) => this.actor.rollSkill(skill, { event }),\r\n                            },\r\n                            {\r\n                                label: `${addSign(skillData.total)}<span style=\"margin: 0 1rem; filter: brightness(0.8)\">(${skillData.passive})</span>`,\r\n                                style: \"display: flex; justify-content: flex-end;\",\r\n                            },\r\n                        ],\r\n                        skill,\r\n                        \"skill\",\r\n                    );\r\n                });\r\n\r\n                const toolButtons = tools.map((tool) => {\r\n                    return new DND5eDrawerButton(\r\n                        [\r\n                            {\r\n                                label: getProficiencyIcon(tool.system.proficient) + tool.name,\r\n                                onClick: (event) => tool.rollToolCheck({ event }),\r\n                            },\r\n                            {\r\n                                label: addSign(abilities[tool.abilityMod].mod + tool.system.proficiencyMultiplier * this.actor.system.attributes.prof),\r\n                            },\r\n                        ],\r\n                        tool,\r\n                    );\r\n                });\r\n\r\n                return [\r\n                    {\r\n                        gridCols: \"5fr 2fr 2fr\",\r\n                        captions: [\r\n                            {\r\n                                label: \"Abilities\",\r\n                                align: \"left\",\r\n                            },\r\n                            {\r\n                                label: \"Check\",\r\n                                align: \"center\",\r\n                            },\r\n                            {\r\n                                label: \"Save\",\r\n                                align: \"center\",\r\n                            },\r\n                        ],\r\n                        align: [\"left\", \"center\", \"center\"],\r\n                        buttons: abilitiesButtons,\r\n                    },\r\n                    {\r\n                        gridCols: \"7fr 2fr\",\r\n                        captions: [\r\n                            {\r\n                                label: \"Skills\",\r\n                            },\r\n                            {\r\n                                label: \"\",\r\n                            },\r\n                        ],\r\n                        buttons: skillsButtons,\r\n                    },\r\n                    {\r\n                        gridCols: \"7fr 2fr\",\r\n                        captions: [\r\n                            {\r\n                                label: \"Tools\",\r\n                            },\r\n                            {\r\n                                label: \"\",\r\n                            },\r\n                        ],\r\n                        buttons: toolButtons,\r\n                    },\r\n                ];\r\n            }\r\n\r\n            get title() {\r\n                return `${game.i18n.localize(\"enhancedcombathud-dnd5e.hud.saves.name\")} / ${game.i18n.localize(\"enhancedcombathud-dnd5e.hud.skills.name\")} / ${game.i18n.localize(\"enhancedcombathud-dnd5e.hud.tools.name\")}`;\r\n            }\r\n        }\r\n\r\n        class DND5eActionActionPanel extends ARGON.MAIN.ActionPanel {\r\n            constructor(...args) {\r\n                super(...args);\r\n            }\r\n\r\n            get label() {\r\n                return \"DND5E.Action\";\r\n            }\r\n\r\n            get maxActions() {\r\n                return this.actor?.inCombat ? 1 : null;\r\n            }\r\n\r\n            get currentActions() {\r\n                return getMidiFlag(\"action\") ?? (this.isActionUsed ? 0 : 1);\r\n            }\r\n\r\n            _onNewRound(combat) {\r\n                this.isActionUsed = false;\r\n                this.updateActionUse();\r\n            }\r\n\r\n            async _getButtons() {\r\n                const spellItems = this.actor.items.filter((item) => itemTypes.spell.includes(item.type) && actionTypes.action.includes(getActivationType(item)) && !CoreHUD.DND5E.mainBarFeatures.includes(item.system.type?.value));\r\n                const featItems = this.actor.items.filter((item) => itemTypes.feat.includes(item.type) && actionTypes.action.includes(getActivationType(item)) && !CoreHUD.DND5E.mainBarFeatures.includes(item.system.type?.value));\r\n                const consumableItems = this.actor.items.filter((item) => itemTypes.consumable.includes(item.type) && actionTypes.action.includes(getActivationType(item)) && !CoreHUD.DND5E.mainBarFeatures.includes(item.system.type?.value));\r\n\r\n                const spellButton = !spellItems.length ? [] : [new DND5eButtonPanelButton({ type: \"spell\", items: spellItems, color: 0 })].filter((button) => button.hasContents);\r\n\r\n                const specialActions = Object.values(ECHItems);\r\n\r\n                const showSpecialActions = game.settings.get(MODULE_ID, \"showSpecialActions\");\r\n                const buttons = [];\r\n                if (showSpecialActions) {\r\n                    buttons.push(...[new DND5eItemButton({ item: null, isWeaponSet: true, isPrimary: true }), new ARGON.MAIN.BUTTONS.SplitButton(new DND5eSpecialActionButton(specialActions[0]), new DND5eSpecialActionButton(specialActions[1])), ...spellButton, new DND5eButtonPanelButton({ type: \"feat\", items: featItems, color: 0 }), new ARGON.MAIN.BUTTONS.SplitButton(new DND5eSpecialActionButton(specialActions[2]), new DND5eSpecialActionButton(specialActions[3])), new ARGON.MAIN.BUTTONS.SplitButton(new DND5eSpecialActionButton(specialActions[4]), new DND5eSpecialActionButton(specialActions[5])), new DND5eButtonPanelButton({ type: \"consumable\", items: consumableItems, color: 0 })]);\r\n                } else {\r\n                    buttons.push(...[new DND5eItemButton({ item: null, isWeaponSet: true, isPrimary: true }), ...spellButton, new DND5eButtonPanelButton({ type: \"feat\", items: featItems, color: 0 }), new DND5eButtonPanelButton({ type: \"consumable\", items: consumableItems, color: 0 })]);\r\n                }\r\n\r\n                const barItems = this.actor.items.filter((item) => CoreHUD.DND5E.mainBarFeatures.includes(item.system.type?.value) && actionTypes.action.includes(getActivationType(item)));\r\n                buttons.push(...condenseItemButtons(barItems));\r\n\r\n                return buttons.filter((button) => button.hasContents || button.items == undefined || button.items.length);\r\n            }\r\n        }\r\n\r\n        class DND5eBonusActionPanel extends ARGON.MAIN.ActionPanel {\r\n            constructor(...args) {\r\n                super(...args);\r\n            }\r\n\r\n            get label() {\r\n                return \"DND5E.BonusAction\";\r\n            }\r\n\r\n            get maxActions() {\r\n                return this.actor?.inCombat ? 1 : null;\r\n            }\r\n\r\n            get currentActions() {\r\n                return getMidiFlag(\"bonus\") ?? (this.isActionUsed ? 0 : 1);\r\n            }\r\n\r\n            _onNewRound(combat) {\r\n                this.isActionUsed = false;\r\n                this.updateActionUse();\r\n            }\r\n\r\n            async _getButtons() {\r\n                const buttons = [new DND5eItemButton({ item: null, isWeaponSet: true, isPrimary: false })];\r\n                for (const [type, types] of Object.entries(itemTypes)) {\r\n                    const items = this.actor.items.filter((item) => types.includes(item.type) && actionTypes.bonus.includes(getActivationType(item)) && !CoreHUD.DND5E.mainBarFeatures.includes(item.system.type?.value));\r\n                    if (!items.length) continue;\r\n                    const button = new DND5eButtonPanelButton({ type, items, color: 1 });\r\n                    if (button.hasContents) buttons.push(button);\r\n                }\r\n\r\n                const barItems = this.actor.items.filter((item) => CoreHUD.DND5E.mainBarFeatures.includes(item.system.type?.value) && actionTypes.bonus.includes(getActivationType(item)));\r\n                buttons.push(...condenseItemButtons(barItems));\r\n\r\n                return buttons;\r\n            }\r\n        }\r\n\r\n        class DND5eReactionActionPanel extends ARGON.MAIN.ActionPanel {\r\n            constructor(...args) {\r\n                super(...args);\r\n            }\r\n\r\n            get label() {\r\n                return \"DND5E.Reaction\";\r\n            }\r\n\r\n            get maxActions() {\r\n                return this.actor?.inCombat ? 1 : null;\r\n            }\r\n\r\n            get currentActions() {\r\n                return getMidiFlag(\"reaction\") ?? (this.isActionUsed ? 0 : 1);\r\n            }\r\n\r\n            _onNewRound(combat) {\r\n                this.isActionUsed = false;\r\n                this.updateActionUse();\r\n            }\r\n\r\n            async _getButtons() {\r\n                const buttons = [new DND5eItemButton({ item: null, isWeaponSet: true, isPrimary: true })];\r\n                //buttons.push(new DND5eEquipmentButton({slot: 1}));\r\n                for (const [type, types] of Object.entries(itemTypes)) {\r\n                    const items = this.actor.items.filter((item) => types.includes(item.type) && actionTypes.reaction.includes(getActivationType(item)) && !CoreHUD.DND5E.mainBarFeatures.includes(item.system.type?.value));\r\n                    if (!items.length) continue;\r\n                    const button = new DND5eButtonPanelButton({ type, items, color: 3 });\r\n                    if (button.hasContents) buttons.push(button);\r\n                }\r\n\r\n                const barItems = this.actor.items.filter((item) => CoreHUD.DND5E.mainBarFeatures.includes(item.system.type?.value) && actionTypes.reaction.includes(getActivationType(item)));\r\n                buttons.push(...condenseItemButtons(barItems));\r\n\r\n                return buttons;\r\n            }\r\n        }\r\n\r\n        class DND5eFreeActionPanel extends ARGON.MAIN.ActionPanel {\r\n            constructor(...args) {\r\n                super(...args);\r\n            }\r\n\r\n            get label() {\r\n                return \"DND5E.Special\";\r\n            }\r\n\r\n            get maxActions() {\r\n                return this.actor?.inCombat ? 1 : null;\r\n            }\r\n\r\n            get currentActions() {\r\n                return this.isActionUsed ? 0 : 1;\r\n            }\r\n\r\n            _onNewRound(combat) {\r\n                this.isActionUsed = false;\r\n                this.updateActionUse();\r\n            }\r\n\r\n            async _getButtons() {\r\n                const buttons = [];\r\n\r\n                for (const [type, types] of Object.entries(itemTypes)) {\r\n                    const items = this.actor.items.filter((item) => types.includes(item.type) && actionTypes.free.includes(getActivationType(item)) && !CoreHUD.DND5E.mainBarFeatures.includes(item.system.type?.value));\r\n                    if (!items.length) continue;\r\n                    const button = new DND5eButtonPanelButton({ type, items, color: 2 });\r\n                    if (button.hasContents) buttons.push(button);\r\n                }\r\n\r\n                const barItems = this.actor.items.filter((item) => CoreHUD.DND5E.mainBarFeatures.includes(item.system.type?.value) && actionTypes.free.includes(getActivationType(item)));\r\n                buttons.push(...condenseItemButtons(barItems));\r\n\r\n                return buttons;\r\n            }\r\n        }\r\n\r\n        class DND5eLegActionPanel extends ARGON.MAIN.ActionPanel {\r\n            constructor(...args) {\r\n                super(...args);\r\n            }\r\n\r\n            get label() {\r\n                return \"DND5E.LegendaryActionLabel\";\r\n            }\r\n\r\n            get maxActions() {\r\n                return this.actor?.inCombat ? this.actor.system.resources?.legact?.max ?? null : null;\r\n            }\r\n\r\n            get currentActions() {\r\n                return this.actor.system.resources?.legact?.value ?? null;\r\n            }\r\n\r\n            async _getButtons() {\r\n                const buttons = [];\r\n                const legendary = this.actor.items.filter((item) => getActivationType(item) === \"legendary\");\r\n                legendary.forEach((item) => {\r\n                    buttons.push(new DND5eItemButton({ item, inActionPanel: true }));\r\n                });\r\n                return buttons;\r\n            }\r\n        }\r\n\r\n        class DND5eLairActionPanel extends ARGON.MAIN.ActionPanel {\r\n            constructor(...args) {\r\n                super(...args);\r\n            }\r\n\r\n            get label() {\r\n                return \"DND5E.LairActionLabel\";\r\n            }\r\n\r\n            get maxActions() {\r\n                return this.actor?.inCombat ? 1 : null;\r\n            }\r\n\r\n            get currentActions() {\r\n                return this.actor.system.resources.lair?.value * 1;\r\n            }\r\n\r\n            async _getButtons() {\r\n                const buttons = [];\r\n                const lair = this.actor.items.filter((item) => getActivationType(item) === \"lair\");\r\n                lair.forEach((item) => {\r\n                    buttons.push(new DND5eItemButton({ item, inActionPanel: true }));\r\n                });\r\n                return buttons;\r\n            }\r\n        }\r\n\r\n        class DND5eMythicActionPanel extends ARGON.MAIN.ActionPanel {\r\n            constructor(...args) {\r\n                super(...args);\r\n            }\r\n\r\n            get label() {\r\n                return \"DND5E.MythicActionLabel\";\r\n            }\r\n\r\n            get maxActions() {\r\n                return null; //this.actor?.inCombat ? 1 : null;\r\n            }\r\n\r\n            get currentActions() {\r\n                return null; //this.actor.system.resources.mythic?.value * 1;\r\n            }\r\n\r\n            async _getButtons() {\r\n                const buttons = [];\r\n                const mythic = this.actor.items.filter((item) => getActivationType(item) === \"mythic\");\r\n                mythic.forEach((item) => {\r\n                    buttons.push(new DND5eItemButton({ item, inActionPanel: true }));\r\n                });\r\n                return buttons;\r\n            }\r\n        }\r\n\r\n        class DND5eItemButton extends ARGON.MAIN.BUTTONS.ItemButton {\r\n            constructor(...args) {\r\n                super(...args);\r\n            }\r\n\r\n            get activity() {\r\n                if(!this.item?.system?.activities) {\r\n                    return\r\n                }\r\n                return Array.from(this.item.system.activities)[0];\r\n            }\r\n\r\n            get hasTooltip() {\r\n                return true;\r\n            }\r\n\r\n            get ranges() {\r\n                const item = this.activity;\r\n                const touchRange = item.range.units == \"touch\" ? canvas?.scene?.grid?.distance : null;\r\n                return {\r\n                    normal: item?.range?.value ?? touchRange,\r\n                    long: item?.range?.long ?? null,\r\n                };\r\n            }\r\n\r\n            get targets() {\r\n                const item = this.activity;\r\n                const validTargets = [\"creature\", \"ally\", \"enemy\"];\r\n                const actionType = item.actionType;\r\n                const targetType = item.target?.type;\r\n                if (!item.target?.units && validTargets.includes(targetType)) {\r\n                    return item.target?.value;\r\n                } else if (actionType === \"mwak\" || actionType === \"rwak\") {\r\n                    return 1;\r\n                }\r\n                return null;\r\n            }\r\n\r\n            get visible() {\r\n                if (!this._isWeaponSet) return super.visible;\r\n                const isReaction = this.parent instanceof DND5eReactionActionPanel;\r\n                const isMelee = this.activity?.actionType === \"mwak\";\r\n                if (isReaction && !isMelee) return false;\r\n                if (this._isPrimary) return super.visible;\r\n                if (this.activity?.type?.value === \"shield\") return false;\r\n                return super.visible;\r\n            }\r\n\r\n            async getTooltipData() {\r\n                const tooltipData = await getTooltipDetails(this.item);\r\n                tooltipData.propertiesLabel = \"enhancedcombathud-dnd5e.tooltip.properties.name\";\r\n                return tooltipData;\r\n            }\r\n\r\n            async _onLeftClick(event) {\r\n                ui.ARGON.interceptNextDialog(event.currentTarget);\r\n                const used = await this.activity.use({ event }, { event });\r\n                if (used) {\r\n                    DND5eItemButton.consumeActionEconomy(this.activity);\r\n                }\r\n            }\r\n\r\n            async _onRightClick(event) {\r\n                this.activity?.sheet?.render(true);\r\n            }\r\n\r\n            static consumeActionEconomy(item) {\r\n                const activationType = getActivationType(item);\r\n                let actionType = null;\r\n                for (const [type, types] of Object.entries(actionTypes)) {\r\n                    if (types.includes(activationType)) actionType = type;\r\n                }\r\n                if (!actionType) return;\r\n                if (game.combat?.combatant?.actor !== item.parent) actionType = \"reaction\";\r\n                if (actionType === \"action\") {\r\n                    ui.ARGON.components.main[0].isActionUsed = true;\r\n                    ui.ARGON.components.main[0].updateActionUse();\r\n                } else if (actionType === \"bonus\") {\r\n                    ui.ARGON.components.main[1].isActionUsed = true;\r\n                    ui.ARGON.components.main[1].updateActionUse();\r\n                } else if (actionType === \"reaction\") {\r\n                    ui.ARGON.components.main[2].isActionUsed = true;\r\n                    ui.ARGON.components.main[2].updateActionUse();\r\n                } else if (actionType === \"free\") {\r\n                    ui.ARGON.components.main[3].isActionUsed = true;\r\n                    ui.ARGON.components.main[3].updateActionUse();\r\n                } else if (actionType === \"legendary\") {\r\n                    ui.ARGON.components.main[4].isActionUsed = true;\r\n                }\r\n            }\r\n\r\n            async render(...args) {\r\n                await super.render(...args);\r\n                if (this.activity) {\r\n                    const weapons = this.actor.items.filter((item) => item.consume?.target === this.activity.id);\r\n                    ui.ARGON.updateItemButtons(weapons);\r\n                }\r\n            }\r\n\r\n            get quantity() {\r\n                if (!this.activity) return null;\r\n                const showQuantityItemTypes = [\"consumable\"];\r\n                const consumeType = this.activity.consume?.type;\r\n                if (consumeType === \"ammo\") {\r\n                    const ammoItem = this.actor.items.get(this.activity.consume.target);\r\n                    if (!ammoItem) return null;\r\n                    return Math.floor((ammoItem.quantity ?? 0) / this.activity.consume.amount);\r\n                } else if (consumeType === \"attribute\") {\r\n                    return Math.floor(getProperty(this.actor, this.activity.consume.target) / this.activity.consume.amount);\r\n                } else if (consumeType === \"charges\") {\r\n                    const chargesItem = this.actor.items.get(this.activity.consume.target);\r\n                    if (!chargesItem) return null;\r\n                    return Math.floor((chargesItem.uses?.value ?? 0) / this.activity.consume.amount);\r\n                } else if (showQuantityItemTypes.includes(this.activity.type)) {\r\n                    return this.activity.uses?.value ?? this.activity.quantity;\r\n                } else if (this.activity.uses.value !== null && this.activity.uses.per !== null && this.activity.uses.max) {\r\n                    return this.activity.uses.value;\r\n                }\r\n                return null;\r\n            }\r\n        }\r\n\r\n        class DND5eButtonPanelButton extends ARGON.MAIN.BUTTONS.ButtonPanelButton {\r\n            constructor({ type, items, color }) {\r\n                super();\r\n                this.type = type;\r\n                this.items = items;\r\n                this.color = color;\r\n                this.itemsWithSpells = [];\r\n                this._spells = this.prePrepareSpells();\r\n            }\r\n\r\n            get hasContents() {\r\n                return this._spells ? !!this._spells.length || !!this.itemsWithSpells.length : !!this.items.length;\r\n            }\r\n\r\n            get colorScheme() {\r\n                return this.color;\r\n            }\r\n\r\n            get id() {\r\n                return `${this.type}-${this.color}`;\r\n            }\r\n\r\n            get label() {\r\n                switch (this.type) {\r\n                    case \"spell\":\r\n                        return \"enhancedcombathud-dnd5e.hud.castspell.name\";\r\n                    case \"feat\":\r\n                        return \"enhancedcombathud-dnd5e.hud.usepower.name\";\r\n                    case \"consumable\":\r\n                        return \"enhancedcombathud-dnd5e.hud.useitem.name\";\r\n                }\r\n            }\r\n\r\n            get icon() {\r\n                switch (this.type) {\r\n                    case \"spell\":\r\n                        return \"modules/enhancedcombathud/icons/spell-book.webp\";\r\n                    case \"feat\":\r\n                        return \"modules/enhancedcombathud/icons/mighty-force.webp\";\r\n                    case \"consumable\":\r\n                        return \"modules/enhancedcombathud/icons/drink-me.webp\";\r\n                }\r\n            }\r\n\r\n            get showPreparedOnly() {\r\n                if (this.actor.type !== \"character\") return false;\r\n                const preparedFlag = this.actor.getFlag(MODULE_ID, \"showPrepared\");\r\n                if (preparedFlag === \"all\") return false;\r\n                if (preparedFlag === \"preparedOnly\") return true;\r\n                const classes = Object.keys(this.actor.classes);\r\n                const requiresPreparation = [\"cleric\", \"druid\", \"paladin\", \"wizard\", \"artificer\"].some((className) => classes.includes(className));\r\n                return requiresPreparation;\r\n            }\r\n\r\n            prePrepareSpells() {\r\n                if (this.type !== \"spell\") return;\r\n\r\n                const spellLevels = CONFIG.DND5E.spellLevels;\r\n                const itemsToIgnore = [];\r\n                if (game.modules.get(\"items-with-spells-5e\")?.active) {\r\n                    const IWSAPI = game.modules.get(\"items-with-spells-5e\").api;\r\n                    const actionType = this.items[0].system.activation?.type;\r\n                    const spellItems = this.actor.items.filter((item) => item.flags[\"items-with-spells-5e\"]?.[\"item-spells\"]?.length);\r\n                    for (const item of spellItems) {\r\n                        const spellData = item.flags[\"items-with-spells-5e\"][\"item-spells\"];\r\n                        const itemsInSpell = spellData.map((spell) => this.actor.items.get(spell.id)).filter((item) => item && getActivationType(item) === actionType);\r\n                        if (!itemsInSpell.length) continue;\r\n                        itemsToIgnore.push(...itemsInSpell);\r\n                        if (!IWSAPI.isUsableItem(item)) continue;\r\n                        this.itemsWithSpells.push({\r\n                            label: item.name,\r\n                            buttons: itemsInSpell.map((item) => new DND5eItemButton({ item })),\r\n                            uses: () => {\r\n                                return { max: item.system.uses?.max, value: item.system.uses?.value };\r\n                            },\r\n                        });\r\n                    }\r\n                    this.items = this.items.filter((item) => !itemsToIgnore.includes(item));\r\n                }\r\n                if (this.showPreparedOnly) {\r\n                    const allowIfNotPrepared = [\"atwill\", \"innate\", \"pact\", \"always\"];\r\n                    this.items = this.items.filter((item) => {\r\n                        if (allowIfNotPrepared.includes(item.system.preparation.mode)) return true;\r\n                        if (item.system.level == 0) return true;\r\n                        return item.system.preparation.prepared;\r\n                    });\r\n                }\r\n\r\n                const spells = [\r\n                    ...this.itemsWithSpells,\r\n                    {\r\n                        label: \"DND5E.SpellPrepAtWill\",\r\n                        buttons: this.items.filter((item) => item.system.preparation.mode === \"atwill\").map((item) => new DND5eItemButton({ item })),\r\n                        uses: { max: Infinity, value: Infinity },\r\n                    },\r\n                    {\r\n                        label: \"DND5E.SpellPrepInnate\",\r\n                        buttons: this.items.filter((item) => item.system.preparation.mode === \"innate\").map((item) => new DND5eItemButton({ item })),\r\n                        uses: { max: Infinity, value: Infinity },\r\n                    },\r\n                    {\r\n                        label: Object.values(spellLevels)[0],\r\n                        buttons: this.items.filter((item) => item.system.level == 0).map((item) => new DND5eItemButton({ item })),\r\n                        uses: { max: Infinity, value: Infinity },\r\n                    },\r\n                    {\r\n                        label: \"DND5E.PactMagic\",\r\n                        buttons: this.items.filter((item) => item.system.preparation.mode === \"pact\").map((item) => new DND5eItemButton({ item })),\r\n                        uses: () => {\r\n                            return this.actor.system.spells.pact;\r\n                        },\r\n                    },\r\n                ];\r\n                for (const [level, label] of Object.entries(spellLevels)) {\r\n                    const levelSpells = this.items.filter((item) => item.system.level == level && (item.system.preparation.mode === \"prepared\" || item.system.preparation.mode === \"always\"));\r\n                    if (!levelSpells.length || level == 0) continue;\r\n                    spells.push({\r\n                        label,\r\n                        buttons: levelSpells.map((item) => new DND5eItemButton({ item })),\r\n                        uses: () => {\r\n                            return this.actor.system.spells[`spell${level}`];\r\n                        },\r\n                    });\r\n                }\r\n                return spells.filter((spell) => spell.buttons.length);\r\n            }\r\n\r\n            async _getPanel() {\r\n                if (this.type === \"spell\") {\r\n                    return new ARGON.MAIN.BUTTON_PANELS.ACCORDION.AccordionPanel({ id: this.id, accordionPanelCategories: this._spells.map(({ label, buttons, uses }) => new ARGON.MAIN.BUTTON_PANELS.ACCORDION.AccordionPanelCategory({ label, buttons, uses })) });\r\n                } else {\r\n                    return new ARGON.MAIN.BUTTON_PANELS.ButtonPanel({ id: this.id, buttons: this.items.map((item) => new DND5eItemButton({ item })) });\r\n                }\r\n            }\r\n        }\r\n\r\n        class DND5eSpecialActionButton extends ARGON.MAIN.BUTTONS.ActionButton {\r\n            constructor(specialItem) {\r\n                super();\r\n                const actorItem = this.actor.items.getName(specialItem.name);\r\n                this.item =\r\n                    actorItem ??\r\n                    new CONFIG.Item.documentClass(specialItem, {\r\n                        parent: this.actor,\r\n                    });\r\n            }\r\n\r\n            get label() {\r\n                return this.item.name;\r\n            }\r\n\r\n            get icon() {\r\n                return this.item.img;\r\n            }\r\n\r\n            get hasTooltip() {\r\n                return true;\r\n            }\r\n\r\n            async getTooltipData() {\r\n                const tooltipData = await getTooltipDetails(this.item);\r\n                tooltipData.propertiesLabel = \"enhancedcombathud-dnd5e.tooltip.properties.name\";\r\n                return tooltipData;\r\n            }\r\n\r\n            async _onLeftClick(event) {\r\n                const useCE = game.modules.get(\"dfreds-convenient-effects\")?.active && game.dfreds.effectInterface.findEffect({effectName: this.label});\r\n                let success = false;\r\n                if (useCE) {\r\n                    success = true;\r\n                    await game.dfreds.effectInterface.toggleEffect({effectName: this.label, overlay: false, uuids: [this.actor.uuid] });\r\n                } else {\r\n                    success = await this.item.use({ event }, { event });\r\n                }\r\n                if (success) {\r\n                    DND5eItemButton.consumeActionEconomy(this.item);\r\n                }\r\n            }\r\n        }\r\n\r\n        class DND5eMovementHud extends ARGON.MovementHud {\r\n            constructor(...args) {\r\n                super(...args);\r\n                this.getMovementMode = game.modules.get(\"elevation-drag-ruler\")?.api?.getMovementMode;\r\n            }\r\n\r\n            get visible() {\r\n                return game.combat?.started;\r\n            }\r\n\r\n            get movementMode() {\r\n                return this.getMovementMode ? this.getMovementMode(this.token) : \"walk\";\r\n            }\r\n\r\n            get movementMax() {\r\n                if (!this.actor) return 0;\r\n                return this.actor.system.attributes.movement[this.movementMode] / canvas.scene.dimensions.distance;\r\n            }\r\n        }\r\n\r\n        class DND5eButtonHud extends ARGON.ButtonHud {\r\n            constructor(...args) {\r\n                super(...args);\r\n            }\r\n\r\n            get visible() {\r\n                return !game.combat?.started;\r\n            }\r\n\r\n            async _getButtons() {\r\n                return [\r\n                    {\r\n                        label: \"DND5E.LongRest\",\r\n                        onClick: (event) => this.actor.longRest(),\r\n                        icon: \"fas fa-bed\",\r\n                    },\r\n                    {\r\n                        label: \"DND5E.ShortRest\",\r\n                        onClick: (event) => this.actor.shortRest(),\r\n                        icon: \"fas fa-coffee\",\r\n                    },\r\n                ];\r\n            }\r\n        }\r\n\r\n        class DND5eWeaponSets extends ARGON.WeaponSets {\r\n            async getDefaultSets() {\r\n                const sets = await super.getDefaultSets();\r\n                const isTransformed = this.actor.flags?.dnd5e?.isPolymorphed;\r\n                if (this.actor.type !== \"npc\" && !isTransformed) return sets;\r\n                const actions = this.actor.items.filter((item) => item.type === \"weapon\" && getActivationType(item) === \"action\");\r\n                const bonus = this.actor.items.filter((item) => item.type === \"weapon\" && getActivationType(item) === \"bonus\");\r\n                return {\r\n                    1: {\r\n                        primary: actions[0]?.uuid ?? null,\r\n                        secondary: bonus[0]?.uuid ?? null,\r\n                    },\r\n                    2: {\r\n                        primary: actions[1]?.uuid ?? null,\r\n                        secondary: bonus[1]?.uuid ?? null,\r\n                    },\r\n                    3: {\r\n                        primary: actions[2]?.uuid ?? null,\r\n                        secondary: bonus[2]?.uuid ?? null,\r\n                    },\r\n                };\r\n            }\r\n\r\n            async _getSets() {\r\n                const isTransformed = this.actor.flags?.dnd5e?.isPolymorphed;\r\n\r\n                const sets = isTransformed ? await this.getDefaultSets() : foundry.utils.mergeObject(await this.getDefaultSets(), foundry.utils.deepClone(this.actor.getFlag(\"enhancedcombathud\", \"weaponSets\") || {}));\r\n\r\n                for (const [set, slots] of Object.entries(sets)) {\r\n                    slots.primary = slots.primary ? await fromUuid(slots.primary) : null;\r\n                    slots.secondary = slots.secondary ? await fromUuid(slots.secondary) : null;\r\n                }\r\n                return sets;\r\n            }\r\n\r\n            async _onSetChange({ sets, active }) {\r\n                const switchEquip = game.settings.get(\"enhancedcombathud-dnd5e\", \"switchEquip\");\r\n                if (!switchEquip) return;\r\n                const updates = [];\r\n                const activeSet = sets[active];\r\n                const activeItems = Object.values(activeSet).filter((item) => item);\r\n                const inactiveSets = Object.values(sets).filter((set) => set !== activeSet);\r\n                const inactiveItems = inactiveSets\r\n                    .flatMap((set) => Object.values(set))\r\n                    .filter((item) => item)\r\n                    .filter((item) => !activeItems.includes(item));\r\n                activeItems.forEach((item) => {\r\n                    if (!item.system?.equipped) updates.push({ _id: item.id, \"system.equipped\": true });\r\n                });\r\n                inactiveItems.forEach((item) => {\r\n                    if (item.system?.equipped) updates.push({ _id: item.id, \"system.equipped\": false });\r\n                });\r\n                return await this.actor.updateEmbeddedDocuments(\"Item\", updates);\r\n            }\r\n        }\r\n\r\n        const enableMacroPanel = game.settings.get(MODULE_ID, \"macroPanel\");\r\n\r\n        const mainPanels = [DND5eActionActionPanel, DND5eBonusActionPanel, DND5eReactionActionPanel, DND5eFreeActionPanel, DND5eLegActionPanel, DND5eLairActionPanel, DND5eMythicActionPanel];\r\n        if (enableMacroPanel) mainPanels.push(ARGON.PREFAB.MacroPanel);\r\n        mainPanels.push(ARGON.PREFAB.PassTurnPanel);\r\n\r\n        CoreHUD.definePortraitPanel(DND5ePortraitPanel);\r\n        CoreHUD.defineDrawerPanel(DND5eDrawerPanel);\r\n        CoreHUD.defineMainPanels(mainPanels);\r\n        CoreHUD.defineMovementHud(DND5eMovementHud);\r\n        CoreHUD.defineButtonHud(DND5eButtonHud);\r\n        CoreHUD.defineWeaponSets(DND5eWeaponSets);\r\n        CoreHUD.defineSupportedActorTypes([\"character\", \"npc\"]);\r\n    });\r\n}\r\n\r\nfunction registerItems() {\r\n    ECHItems[game.i18n.localize(\"enhancedcombathud-dnd5e.items.disengage.name\")] = {\r\n        name: game.i18n.localize(\"enhancedcombathud-dnd5e.items.disengage.name\"),\r\n        type: \"feat\",\r\n        img: \"modules/enhancedcombathud/icons/journey.webp\",\r\n        system: {\r\n            type: {\r\n                value: \"\",\r\n                subtype: \"\",\r\n            },\r\n            description: {\r\n                value: game.i18n.localize(\"enhancedcombathud-dnd5e.items.disengage.desc\"),\r\n                chat: \"\",\r\n                unidentified: \"\",\r\n            },\r\n            source: \"\",\r\n            quantity: 1,\r\n            weight: 0,\r\n            price: 0,\r\n            attuned: false,\r\n            attunement: 0,\r\n            equipped: false,\r\n            rarity: \"\",\r\n            identified: true,\r\n            activation: {\r\n                type: \"action\",\r\n                cost: 1,\r\n                condition: \"\",\r\n            },\r\n            duration: {\r\n                value: 1,\r\n                units: \"turn\",\r\n            },\r\n            target: {\r\n                value: null,\r\n                width: null,\r\n                units: \"\",\r\n                type: \"self\",\r\n            },\r\n            range: {\r\n                value: null,\r\n                long: null,\r\n                units: \"\",\r\n            },\r\n            consume: {\r\n                type: \"\",\r\n                target: \"\",\r\n                amount: null,\r\n            },\r\n            ability: \"\",\r\n            actionType: \"util\",\r\n            attackBonus: 0,\r\n            chatFlavor: \"\",\r\n            critical: null,\r\n            damage: {\r\n                parts: [],\r\n                versatile: \"\",\r\n            },\r\n            formula: \"\",\r\n            save: {\r\n                ability: \"\",\r\n                dc: null,\r\n                scaling: \"spell\",\r\n            },\r\n        },\r\n        sort: 0,\r\n        flags: {\r\n            core: {\r\n                sourceId: \"Item.wyQkeuZkttllAFB1\",\r\n            },\r\n\r\n            \"midi-qol\": {\r\n                onUseMacroName: \"\",\r\n            },\r\n        },\r\n    };\r\n    ECHItems[game.i18n.localize(\"enhancedcombathud-dnd5e.items.dodge.name\")] = {\r\n        name: game.i18n.localize(\"enhancedcombathud-dnd5e.items.dodge.name\"),\r\n        type: \"feat\",\r\n        img: \"modules/enhancedcombathud/icons/armor-upgrade.webp\",\r\n        system: {\r\n            type: {\r\n                value: \"\",\r\n                subtype: \"\",\r\n            },\r\n            description: {\r\n                value: game.i18n.localize(\"enhancedcombathud-dnd5e.items.dodge.desc\"),\r\n                chat: \"\",\r\n                unidentified: \"\",\r\n            },\r\n            source: \"\",\r\n            quantity: 1,\r\n            weight: 0,\r\n            price: 0,\r\n            attuned: false,\r\n            attunement: 0,\r\n            equipped: false,\r\n            rarity: \"\",\r\n            identified: true,\r\n            activation: {\r\n                type: \"action\",\r\n                cost: 1,\r\n                condition: \"\",\r\n            },\r\n            duration: {\r\n                value: 1,\r\n                units: \"round\",\r\n            },\r\n            target: {\r\n                value: null,\r\n                width: null,\r\n                units: \"\",\r\n                type: \"self\",\r\n            },\r\n            range: {\r\n                value: null,\r\n                long: null,\r\n                units: \"\",\r\n            },\r\n\r\n            consume: {\r\n                type: \"\",\r\n                target: \"\",\r\n                amount: null,\r\n            },\r\n            ability: \"\",\r\n            actionType: \"util\",\r\n            attackBonus: 0,\r\n            chatFlavor: \"\",\r\n            critical: null,\r\n            damage: {\r\n                parts: [],\r\n                versatile: \"\",\r\n            },\r\n            formula: \"\",\r\n            save: {\r\n                ability: \"\",\r\n                dc: null,\r\n                scaling: \"spell\",\r\n            },\r\n            consumableType: \"trinket\",\r\n        },\r\n        sort: 0,\r\n        flags: {\r\n            \"midi-qol\": {\r\n                onUseMacroName: \"\",\r\n            },\r\n        },\r\n    };\r\n    ECHItems[game.i18n.localize(\"enhancedcombathud-dnd5e.items.ready.name\")] = {\r\n        name: game.i18n.localize(\"enhancedcombathud-dnd5e.items.ready.name\"),\r\n        type: \"feat\",\r\n        img: \"modules/enhancedcombathud/icons/clockwork.webp\",\r\n        system: {\r\n            type: {\r\n                value: \"\",\r\n                subtype: \"\",\r\n            },\r\n            description: {\r\n                value: game.i18n.localize(\"enhancedcombathud-dnd5e.items.ready.desc\"),\r\n                chat: \"\",\r\n                unidentified: \"\",\r\n            },\r\n            source: \"\",\r\n            quantity: 1,\r\n            weight: 0,\r\n            price: 0,\r\n            attuned: false,\r\n            attunement: 0,\r\n            equipped: false,\r\n            rarity: \"\",\r\n            identified: true,\r\n            activation: {\r\n                type: \"action\",\r\n                cost: 1,\r\n                condition: \"\",\r\n            },\r\n            duration: {\r\n                value: null,\r\n                units: \"\",\r\n            },\r\n            target: {\r\n                value: null,\r\n                width: null,\r\n                units: \"\",\r\n                type: \"self\",\r\n            },\r\n            range: {\r\n                value: null,\r\n                long: null,\r\n                units: \"\",\r\n            },\r\n\r\n            consume: {\r\n                type: \"\",\r\n                target: \"\",\r\n                amount: null,\r\n            },\r\n            ability: \"\",\r\n            actionType: \"util\",\r\n            attackBonus: 0,\r\n            chatFlavor: \"\",\r\n            critical: null,\r\n            damage: {\r\n                parts: [],\r\n                versatile: \"\",\r\n            },\r\n            formula: \"\",\r\n            save: {\r\n                ability: \"\",\r\n                dc: null,\r\n                scaling: \"spell\",\r\n            },\r\n            consumableType: \"trinket\",\r\n        },\r\n        sort: 0,\r\n        flags: {\r\n            \"midi-qol\": {\r\n                onUseMacroName: \"\",\r\n            },\r\n        },\r\n    };\r\n    ECHItems[game.i18n.localize(\"enhancedcombathud-dnd5e.items.hide.name\")] = {\r\n        name: game.i18n.localize(\"enhancedcombathud-dnd5e.items.hide.name\"),\r\n        type: \"feat\",\r\n        img: \"modules/enhancedcombathud/icons/cloak-dagger.webp\",\r\n        system: {\r\n            type: {\r\n                value: \"\",\r\n                subtype: \"\",\r\n            },\r\n            description: {\r\n                value: game.i18n.localize(\"enhancedcombathud-dnd5e.items.hide.desc\"),\r\n                chat: \"\",\r\n                unidentified: \"\",\r\n            },\r\n            source: \"\",\r\n            quantity: 1,\r\n            weight: 0,\r\n            price: 0,\r\n            attuned: false,\r\n            attunement: 0,\r\n            equipped: false,\r\n            rarity: \"\",\r\n            identified: true,\r\n            activation: {\r\n                type: \"action\",\r\n                cost: 1,\r\n                condition: \"\",\r\n            },\r\n            duration: {\r\n                value: null,\r\n                units: \"\",\r\n            },\r\n            target: {\r\n                value: null,\r\n                width: null,\r\n                units: \"\",\r\n                type: \"self\",\r\n            },\r\n            range: {\r\n                value: null,\r\n                long: null,\r\n                units: \"\",\r\n            },\r\n\r\n            consume: {\r\n                type: \"\",\r\n                target: \"\",\r\n                amount: null,\r\n            },\r\n            recharge: {\r\n                value: null,\r\n                charged: false,\r\n            },\r\n            ability: \"\",\r\n            actionType: \"util\",\r\n            attackBonus: 0,\r\n            chatFlavor: \"\",\r\n            critical: null,\r\n            damage: {\r\n                parts: [],\r\n                versatile: \"\",\r\n            },\r\n            formula: \"\",\r\n            save: {\r\n                ability: \"\",\r\n                dc: null,\r\n                scaling: \"spell\",\r\n            },\r\n            consumableType: \"trinket\",\r\n        },\r\n        sort: 0,\r\n        flags: {\r\n            \"midi-qol\": {\r\n                onUseMacroName: \"\",\r\n            },\r\n        },\r\n    };\r\n    ECHItems[game.i18n.localize(\"enhancedcombathud-dnd5e.items.dash.name\")] = {\r\n        name: game.i18n.localize(\"enhancedcombathud-dnd5e.items.dash.name\"),\r\n        type: \"feat\",\r\n        img: \"modules/enhancedcombathud/icons/walking-boot.webp\",\r\n        system: {\r\n            type: {\r\n                value: \"\",\r\n                subtype: \"\",\r\n            },\r\n            description: {\r\n                value: game.i18n.localize(\"enhancedcombathud-dnd5e.items.dash.desc\"),\r\n                chat: \"\",\r\n                unidentified: \"\",\r\n            },\r\n            source: \"\",\r\n            quantity: 1,\r\n            weight: 0,\r\n            price: 0,\r\n            attuned: false,\r\n            attunement: 0,\r\n            equipped: false,\r\n            rarity: \"\",\r\n            identified: true,\r\n            activation: {\r\n                type: \"action\",\r\n                cost: 1,\r\n                condition: \"\",\r\n            },\r\n            duration: {\r\n                value: null,\r\n                units: \"\",\r\n            },\r\n            target: {\r\n                value: null,\r\n                width: null,\r\n                units: \"\",\r\n                type: \"self\",\r\n            },\r\n            range: {\r\n                value: null,\r\n                long: null,\r\n                units: \"\",\r\n            },\r\n\r\n            consume: {\r\n                type: \"\",\r\n                target: \"\",\r\n                amount: null,\r\n            },\r\n            ability: \"\",\r\n            actionType: \"util\",\r\n            attackBonus: 0,\r\n            chatFlavor: \"\",\r\n            critical: null,\r\n            damage: {\r\n                parts: [],\r\n                versatile: \"\",\r\n            },\r\n            formula: \"\",\r\n            save: {\r\n                ability: \"\",\r\n                dc: null,\r\n                scaling: \"spell\",\r\n            },\r\n            consumableType: \"trinket\",\r\n        },\r\n        sort: 0,\r\n        flags: {\r\n            \"midi-qol\": {\r\n                onUseMacroName: \"\",\r\n            },\r\n        },\r\n    };\r\n    ECHItems[game.i18n.localize(\"enhancedcombathud-dnd5e.items.shove.name\")] = {\r\n        name: game.i18n.localize(\"enhancedcombathud-dnd5e.items.shove.name\"),\r\n        type: \"feat\",\r\n        img: \"modules/enhancedcombathud/icons/shield-bash.webp\",\r\n        system: {\r\n            type: {\r\n                value: \"\",\r\n                subtype: \"\",\r\n            },\r\n            description: {\r\n                value: game.i18n.localize(\"enhancedcombathud-dnd5e.items.shove.desc\"),\r\n                chat: \"\",\r\n                unidentified: \"\",\r\n            },\r\n            source: \"\",\r\n            quantity: 1,\r\n            weight: 0,\r\n            price: 0,\r\n            attuned: false,\r\n            attunement: 0,\r\n            equipped: false,\r\n            rarity: \"\",\r\n            identified: true,\r\n            activation: {\r\n                type: \"action\",\r\n                cost: 1,\r\n                condition: \"\",\r\n            },\r\n            duration: {\r\n                value: null,\r\n                units: \"\",\r\n            },\r\n            target: {\r\n                value: 1,\r\n                width: null,\r\n                units: \"\",\r\n                type: \"creature\",\r\n            },\r\n            range: {\r\n                value: null,\r\n                long: null,\r\n                units: \"touch\",\r\n            },\r\n\r\n            consume: {\r\n                type: \"\",\r\n                target: \"\",\r\n                amount: null,\r\n            },\r\n            ability: \"\",\r\n            actionType: \"util\",\r\n            attackBonus: 0,\r\n            chatFlavor: \"\",\r\n            critical: null,\r\n            damage: {\r\n                parts: [],\r\n                versatile: \"\",\r\n            },\r\n            formula: \"\",\r\n            save: {\r\n                ability: \"\",\r\n                dc: null,\r\n                scaling: \"spell\",\r\n            },\r\n            consumableType: \"trinket\",\r\n        },\r\n        sort: 0,\r\n        flags: {\r\n            \"midi-qol\": {\r\n                onUseMacroName: \"\",\r\n            },\r\n        },\r\n    };\r\n}\r\n","import { MODULE_ID } from \"./main.js\";\r\n\r\nexport function registerSettings() {\r\n    const settings = {\r\n        showWeaponsItems: {\r\n            name: game.i18n.localize(\"enhancedcombathud-dnd5e.settings.showWeaponsItems.name\"),\r\n            hint: game.i18n.localize(\"enhancedcombathud-dnd5e.settings.showWeaponsItems.hint\"),\r\n            scope: \"world\",\r\n            config: true,\r\n            type: Boolean,\r\n            default: false,\r\n            onChange: (sett) => {\r\n                ui.ARGON.constructor.DND5E.itemTypes.consumable = ui.ARGON.constructor.DND5E.itemTypes.consumable.filter(i => i !== \"weapon\");\r\n                if(sett) ui.ARGON.constructor.DND5E.itemTypes.consumable.push(\"weapon\");\r\n                ui.ARGON.refresh()\r\n            },\r\n        },\r\n        showClassActions: {\r\n            name: game.i18n.localize(\"enhancedcombathud-dnd5e.settings.showClassActions.name\"),\r\n            hint: game.i18n.localize(\"enhancedcombathud-dnd5e.settings.showClassActions.hint\"),\r\n            scope: \"world\",\r\n            config: true,\r\n            type: Boolean,\r\n            default: true,\r\n            onChange: (sett) => {\r\n                ui.ARGON.constructor.DND5E.mainBarFeatures = ui.ARGON.constructor.DND5E.mainBarFeatures.filter(i => i !== \"class\");\r\n                if(sett) ui.ARGON.constructor.DND5E.mainBarFeatures.push(\"class\");\r\n                ui.ARGON.refresh()\r\n            },\r\n        },\r\n        condenseClassActions: {\r\n            name: game.i18n.localize(\"enhancedcombathud-dnd5e.settings.condenseClassActions.name\"),\r\n            hint: game.i18n.localize(\"enhancedcombathud-dnd5e.settings.condenseClassActions.hint\"),\r\n            scope: \"world\",\r\n            config: true,\r\n            type: Boolean,\r\n            default: true,\r\n            onChange: () => ui.ARGON.refresh(),\r\n        },\r\n        macroPanel: {\r\n            name: game.i18n.localize(\"enhancedcombathud-dnd5e.settings.macroPanel.name\"),\r\n            hint: game.i18n.localize(\"enhancedcombathud-dnd5e.settings.macroPanel.hint\"),\r\n            scope: \"world\",\r\n            config: true,\r\n            type: Boolean,\r\n            default: false,\r\n            requiresReload: true,\r\n            onChange: () => ui.ARGON.refresh(),\r\n        },\r\n        switchEquip: {\r\n            name: game.i18n.localize(\"enhancedcombathud-dnd5e.settings.switchEquip.name\"),\r\n            hint: game.i18n.localize(\"enhancedcombathud-dnd5e.settings.switchEquip.hint\"),\r\n            scope: \"world\",\r\n            config: true,\r\n            type: Boolean,\r\n            default: true,\r\n            onChange: () => ui.ARGON.refresh(),\r\n        },\r\n        showSpecialActions: {\r\n            name: game.i18n.localize(\"enhancedcombathud-dnd5e.settings.showSpecialActions.name\"),\r\n            hint: game.i18n.localize(\"enhancedcombathud-dnd5e.settings.showSpecialActions.hint\"),\r\n            scope: \"world\",\r\n            config: true,\r\n            type: Boolean,\r\n            default: true,\r\n            onChange: () => ui.ARGON.refresh(),\r\n        },\r\n    };\r\n\r\n    registerSettingsArray(settings);\r\n}\r\n\r\nexport function getSetting(key) {\r\n    return game.settings.get(MODULE_ID, key);\r\n}\r\n\r\nexport async function setSetting(key, value) {\r\n    return await game.settings.set(MODULE_ID, key, value);\r\n}\r\n\r\nfunction registerSettingsArray(settings) {\r\n    for(const [key, value] of Object.entries(settings)) {\r\n        game.settings.register(MODULE_ID, key, value);\r\n    }\r\n}","import {initConfig} from \"./config.js\";\r\nimport { registerSettings } from \"./settings.js\";\r\n\r\nexport const MODULE_ID = \"enhancedcombathud-dnd5e\";\r\n\r\nHooks.on(\"setup\", () => {\r\n    registerSettings();\r\n    initConfig();\r\n});"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","_regeneratorRuntime","Op","hasOwn","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","_typeof","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","_catch","thrown","delegateYield","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","_toPrimitive","input","hint","prim","toPrimitive","res","String","Number","_createClass","protoProps","staticProps","_inherits","subClass","superClass","_setPrototypeOf","p","bind","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","Boolean","valueOf","e","_createSuperInternal","Super","_getPrototypeOf","NewTarget","arguments","apply","_possibleConstructorReturn","_assertThisInitialized","ReferenceError","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","args","ECHItems","initConfig","Hooks","on","CoreHUD","_game$modules$get","game","system","id","registerItems","i18n","localize","img","subtype","description","chat","unidentified","source","quantity","weight","price","attuned","attunement","equipped","rarity","identified","activation","cost","condition","duration","units","width","range","long","consume","amount","ability","actionType","attackBonus","chatFlavor","critical","damage","parts","versatile","formula","save","dc","scaling","sort","flags","core","sourceId","onUseMacroName","consumableType","recharge","charged","ARGON","isMIDI","modules","active","getMidiFlag","_ui$ARGON$_actor$getF","_flag$actionType","ui","_actor","getFlag","getActivationType","item","_item$system","_Array$from$","activities","Array","from","getActionType","_item$system2","_Array$from$2","actionTypes","action","bonus","reaction","free","itemTypes","spell","feat","consumable","mainBarFeatures","settings","MODULE_ID","DND5E","callAll","DND5ePortraitPanel","_ARGON$PORTRAIT$Portr","_getStatBlocks","_onDeathSave2","_super","_len","_key","concat","_this$actor","this","actor","isPC","_CONFIG$DND5E$creatur","_CONFIG$DND5E$creatur2","creatureType","CONFIG","creatureTypes","details","label","custom","cr","classes","map","c","join","level","race","isDying","attributes","hp","_this$actor$system$at","_this$actor$system$at2","death","success","_this$actor$system$at3","_this$actor$system$at4","failure","_callee","event","_callee$","_context","rollDeathSave","_onDeathSave","_x3","_callee2","_this$actor$system$at5","_this$actor$system$at6","HPText","ACText","SpellDC","hpColor","tempMax","hpMaxColor","_callee2$","_context2","split","word","toUpperCase","replace","trim","temp","tempmax","text","color","max","ac","spelldc","getStatBlocks","PORTRAIT","PortraitPanel","DND5eDrawerButton","_ARGON$DRAWER$DrawerB","_getTooltipData","_super2","buttons","_this","TooltipManager","TOOLTIP_DIRECTIONS","RIGHT","_callee3","tooltipData","_callee3$","_context3","getTooltipDetails","getTooltipData","DRAWER","DrawerButton","DND5eDrawerPanel","_ARGON$DRAWER$DrawerP","_super3","_len2","_key2","_this2","abilities","skills","tools","tool","addSign","gridCols","captions","align","abilityData","onClick","rollAbility","mod","checkBonus","rollAbilityTest","rollAbilitySave","skill","skillData","getProficiencyIcon","proficient","rollSkill","total","passive","style","rollToolCheck","abilityMod","proficiencyMultiplier","prof","DrawerPanel","DND5eActionActionPanel","_ARGON$MAIN$ActionPan","_getButtons2","_super4","_len3","_key3","_this$actor2","inCombat","_getMidiFlag","isActionUsed","_onNewRound","combat","updateActionUse","_callee4","spellItems","featItems","consumableItems","spellButton","specialActions","showSpecialActions","barItems","_callee4$","_context4","items","filter","_item$system$type","includes","_item$system$type2","_item$system$type3","DND5eButtonPanelButton","button","hasContents","DND5eItemButton","isWeaponSet","isPrimary","MAIN","BUTTONS","SplitButton","DND5eSpecialActionButton","_toConsumableArray","_item$system$type4","condenseItemButtons","_getButtons","ActionPanel","DND5eBonusActionPanel","_ARGON$MAIN$ActionPan2","_getButtons3","_super5","_len4","_key4","_this$actor3","_getMidiFlag2","_callee5","_loop","_i","_Object$entries","_this3","_callee5$","_context6","_Object$entries$_i","types","_loop$","_context5","_slicedToArray","_item$system$type5","entries","t0","_item$system$type6","DND5eReactionActionPanel","_ARGON$MAIN$ActionPan3","_getButtons4","_super6","_len5","_key5","_this$actor4","_getMidiFlag3","_callee6","_loop2","_i2","_Object$entries2","_this4","_callee6$","_context8","_Object$entries2$_i","_loop2$","_context7","_item$system$type7","_item$system$type8","DND5eFreeActionPanel","_ARGON$MAIN$ActionPan4","_getButtons5","_super7","_len6","_key6","_this$actor5","_callee7","_loop3","_i3","_Object$entries3","_this5","_callee7$","_context10","_Object$entries3$_i","_loop3$","_context9","_item$system$type9","_item$system$type10","DND5eLegActionPanel","_ARGON$MAIN$ActionPan5","_getButtons6","_super8","_len7","_key7","_this$actor6","_this$actor$system$re","_this$actor$system$re2","resources","legact","_this$actor$system$re3","_this$actor$system$re4","_callee8","_callee8$","_context11","inActionPanel","DND5eLairActionPanel","_ARGON$MAIN$ActionPan6","_getButtons7","_super9","_len8","_key8","_this$actor7","_this$actor$system$re5","lair","_callee9","_callee9$","_context12","DND5eMythicActionPanel","_ARGON$MAIN$ActionPan7","_getButtons8","_super10","_len9","_key9","_callee10","_callee10$","_context13","_ARGON$MAIN$BUTTONS$I","_render","_onRightClick2","_onLeftClick2","_getTooltipData2","_super11","_len10","_key10","_this$item","_canvas","_item$range$value","_item$range","_item$range$long","_item$range2","activity","touchRange","canvas","scene","grid","distance","normal","_item$target","_item$target2","_item$target3","targetType","_this$activity","_this$activity2","_isWeaponSet","_get","isReaction","parent","isMelee","_isPrimary","_callee11","_callee11$","_context14","propertiesLabel","_callee12","_callee12$","_context15","interceptNextDialog","currentTarget","use","consumeActionEconomy","_onLeftClick","_x4","_callee13","_this$activity3","_callee13$","_context16","sheet","render","_onRightClick","_x5","_callee14","_get2","_len11","_key11","weapons","_this6","_args17","_callee14$","_context17","_item$consume","updateItemButtons","_this$activity$consum","_this$activity$uses$v","_this$activity$uses","consumeType","_ammoItem$quantity","ammoItem","Math","floor","getProperty","_chargesItem$uses$val","_chargesItem$uses","chargesItem","uses","per","_game$combat","activationType","_i4","_Object$entries4","_Object$entries4$_i","combatant","components","main","ItemButton","_ARGON$MAIN$BUTTONS$B","_getPanel2","_super12","_ref","_this7","itemsWithSpells","_spells","prePrepareSpells","preparedFlag","some","className","_game$modules$get2","_this8","spellLevels","itemsToIgnore","_this$items$0$system$","_step","IWSAPI","api","_iterator","_createForOfIteratorHelper","_item$flags$itemsWit","_loop4","itemsInSpell","isUsableItem","_item$system$uses","_item$system$uses2","s","n","f","showPreparedOnly","allowIfNotPrepared","preparation","mode","prepared","spells","Infinity","pact","_loop5","_Object$entries5$_i","_Object$entries5","_i5","levelSpells","_callee15","_callee15$","_context18","BUTTON_PANELS","ACCORDION","AccordionPanel","accordionPanelCategories","_ref2","AccordionPanelCategory","ButtonPanel","_getPanel","ButtonPanelButton","_ARGON$MAIN$BUTTONS$A","_onLeftClick3","_getTooltipData3","_super13","specialItem","_this9","actorItem","getName","Item","documentClass","_callee16","_callee16$","_context19","_callee17","_game$modules$get3","useCE","_callee17$","_context20","dfreds","effectInterface","findEffect","effectName","toggleEffect","overlay","uuids","uuid","_x6","ActionButton","DND5eMovementHud","_ARGON$MovementHud","_super14","_game$modules$get4","_this10","_len12","_key12","getMovementMode","_game$combat2","started","token","movement","movementMode","dimensions","MovementHud","DND5eButtonHud","_ARGON$ButtonHud","_getButtons9","_super15","_len13","_key13","_game$combat3","_callee18","_this11","_callee18$","_context21","longRest","icon","shortRest","ButtonHud","DND5eWeaponSets","_ARGON$WeaponSets","_onSetChange2","_getSets2","_getDefaultSets","_super16","_callee19","_this$actor$flags","_actions$0$uuid","_actions$","_bonus$0$uuid","_bonus$","_actions$1$uuid","_actions$2","_bonus$1$uuid","_bonus$2","_actions$2$uuid","_actions$3","_bonus$2$uuid","_bonus$3","sets","isTransformed","actions","_callee19$","_context22","dnd5e","isPolymorphed","primary","secondary","getDefaultSets","_callee20","_this$actor$flags2","_i6","_Object$entries6","_Object$entries6$_i","slots","_callee20$","_context23","t1","foundry","utils","t2","t3","deepClone","mergeObject","fromUuid","t4","t5","_getSets","_callee21","_ref3","updates","activeSet","activeItems","inactiveSets","inactiveItems","_callee21$","_context24","set","flatMap","_item$system3","_id","_item$system4","updateEmbeddedDocuments","_onSetChange","_x7","WeaponSets","enableMacroPanel","mainPanels","PREFAB","MacroPanel","PassTurnPanel","definePortraitPanel","defineDrawerPanel","defineMainPanels","defineMovementHud","defineButtonHud","defineWeaponSets","defineSupportedActorTypes","_x","_x2","_getTooltipDetails","_callee22","_item$labels4","_item$labels5","_damageTypes","_properties","title","itemType","subtitle","dt","damageTypes","properties","materialComponents","_item$system$descript","_item$labels","_item$labels2","_item$labels3","_i7","_Object$entries7","_Object$entries7$_i","_iterator2","_step2","comp","dmgString","tooltipProperties","_callee22$","_context25","labels","weaponTypes","weaponType","itemActionTypes","weaponProperties","school","spellSchools","all","abbr","materials","consumableTypes","requirements","TextEditor","enrichHTML","toHit","derivedDamage","dDmg","getDamageTypeIcon","damageType","d","_p$label","footerText","toLowerCase","proficiency","condensedItems","barItemsLength","barItemsMultipleOfTwo","currentSplitButtonItemButton","isCondensedButton","arr","_arrayWithHoles","isArray","_iterableToArrayLimit","_s","_e","_r","_arr","_n","_d","_unsupportedIterableToArray","minLen","_arrayLikeToArray","toString","test","_nonIterableRest","len","arr2","registerSettings","registerSettingsArray","register","showWeaponsItems","scope","config","default","onChange","sett","refresh","showClassActions","condenseClassActions","macroPanel","requiresReload","switchEquip"],"sourceRoot":""}